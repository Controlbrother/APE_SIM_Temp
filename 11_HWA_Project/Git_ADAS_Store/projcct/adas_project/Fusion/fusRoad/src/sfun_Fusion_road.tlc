%% file : sfun_Fusion_road.tlc
%% 
%% Description:
%%   Simulink Coder TLC Code Generation file for sfun_Fusion_road
%% 
%% Simulink version      : 10.2 (R2020b) 29-Jul-2020
%% TLC file generated on : 10-Dec-2020 14:03:19

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'sfun_Fusion_road';
     def.OutputFcnSpec = 'void Fusion_Road_Main( EHRV2_ROAD_ATTR_INFO_BUS u1[1],EHRV2_CTRL_INFO_BUS u2[1],uint8 u3[1],MRR_HDR_BUS  u4[1],MRR_OBJ_BUS  u5[32],EQ4_FSPX_BUS u6[1],	EQ4_LA_BUS  u7[1],EQ4_LAP_BUS  u8[1],	EQ4_LH_BUS  u9[1],EQ4_LRE_BUS  u10[1],	EQ4_TFL_SPOTS_BUS  u11[1],	EQ4_TFL_STRUCT_BUS  u12[1],	EQ4_TSR_BUS u13[1],	EQ4_FS_BUS u14[1],	single  u15[1],single  u16[1],single  u17[1],single  u18[1],	single  u19[1],single  u20[1],single  u21[1],single  u22[1],single  u23[1],single  u24[1],uint32  u25[1],StbM_TimeStampExtendedType u26[1],StbM_UserDataType u27[1],uint8 u28[1],RFM_ROAD_BUS y1[1],		RFM_TSR_BUS y2[1],	uint32 y3[1],RFM_LANE_BUS y4[1],RFM_LANE_BUS y5[1],RFM_LANE_BUS y6[1],RFM_LANE_BUS y7[1],RFM_INTERSEC_ALERT_BUS y8[1],RFM_BRANCH_BUS y9[1],RFM_REC_LANES_BUS y10[1],RFM_LINE_BUS y11[1],		RFM_LINE_BUS y12[1],		RFM_LINE_BUS y13[1],		RFM_LINE_BUS y14[1],		RFM_LINE_BUS y15[1],		RFM_LINE_BUS y16[1],		RFM_LINE_BUS y17[1],		RFM_LINE_BUS y18[1],		RFM_LINE_BUS y19[1],		RFM_LINE_BUS y20[1],		RFM_LINE_BUS y21[1],		RFM_LINE_BUS y22[1],RFM_LINE_BUS y23[1],RFM_LINE_BUS y24[1])';
     def.StartFcnSpec = 'void Fusion_Road_Init()';
     def.HeaderFiles = {'FusionApi.h'};
     def.SourceFiles = {'FusionApi.c', 'HWAapi.c', 'HWA_R.c', 'HWAafRoadArithm.c', 'HWABoundary.c', 'HWABoundaryLinePredicted.c', 'HWALineFusion.c', 'HWAObejctManage.c', 'HWARoadLayout.c', 'HWARoadPreprocess.c', 'HWARoadSceneRecognition.c', 'HWASpeedLimit.c', 'HWAOutputSendCallback.c'};
     def.IncPaths = {'.\HWA_Road_Api', '.\HWA_Road_Api\autosar_swc_infofusion_autosar_rtw', '.\HWA_Road\include', '.\HWA_Road\include\HWAApi', '.\HWA_Road\include\HWAMsg', '.\HWA_Road\include\HWAPack', '.\HWA_Road\source', '.\HWA_Road\source\Road'};
     def.SrcPaths = {'.\HWA_Road_Api', '.\HWA_Road_Api\autosar_swc_infofusion_autosar_rtw', '.\HWA_Road\include', '.\HWA_Road\include\HWAApi', '.\HWA_Road\include\HWAMsg', '.\HWA_Road\include\HWAPack', '.\HWA_Road\source', '.\HWA_Road\source\Road'};
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
%/

%implements sfun_Fusion_road "C"

%% Function: FcnGenerateUniqueFileName ====================================
%function FcnGenerateUniqueFileName (filename, type) void
    %assign isReserved = TLC_FALSE
    %foreach idxFile = CompiledModel.DataObjectUsage.NumFiles[0]
        %assign thisFile = CompiledModel.DataObjectUsage.File[idxFile]
        %if (thisFile.Name==filename) && (thisFile.Type==type)
            %assign isReserved = TLC_TRUE
            %break
        %endif
    %endforeach
    %if (isReserved==TLC_TRUE)
        %assign filename = FcnGenerateUniqueFileName(filename + "_", type)
    %endif
    %return filename
%endfunction

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup (block, system) void

    %% The Target Language must be C
    %if ::GenCPP==1 && !IsModelReferenceSimTarget()
        %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
    %endif

    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
        %assign hFileName = FcnGenerateUniqueFileName("sfun_Fusion_road_wrapper", "header")
        %assign hFileNameMacro = FEVAL("upper", hFileName)
        %openfile hFile = "%<hFileName>.h"
        %selectfile hFile
        #ifndef _%<hFileNameMacro>_H_
        #define _%<hFileNameMacro>_H_
        
        #ifdef MATLAB_MEX_FILE
        #include "tmwtypes.h"
        #else
        #include "rtwtypes.h"
        #endif
        
        extern int sfun_Fusion_road_wrapper_allocmem(void** y1BUS, int_T y1BUSWidth, void** y2BUS, int_T y2BUSWidth, void** y4BUS, int_T y4BUSWidth, void** y5BUS, int_T y5BUSWidth, void** y6BUS, int_T y6BUSWidth, void** y7BUS, int_T y7BUSWidth, void** y8BUS, int_T y8BUSWidth, void** y9BUS, int_T y9BUSWidth, void** y10BUS, int_T y10BUSWidth, void** y11BUS, int_T y11BUSWidth, void** y12BUS, int_T y12BUSWidth, void** y13BUS, int_T y13BUSWidth, void** y14BUS, int_T y14BUSWidth, void** y15BUS, int_T y15BUSWidth, void** y16BUS, int_T y16BUSWidth, void** y17BUS, int_T y17BUSWidth, void** y18BUS, int_T y18BUSWidth, void** y19BUS, int_T y19BUSWidth, void** y20BUS, int_T y20BUSWidth, void** y21BUS, int_T y21BUSWidth, void** y22BUS, int_T y22BUSWidth, void** y23BUS, int_T y23BUSWidth, void** y24BUS, int_T y24BUSWidth, void** u1BUS, int_T u1BUSWidth, void** u2BUS, int_T u2BUSWidth, void** u4BUS, int_T u4BUSWidth, void** u5BUS, int_T u5BUSWidth, void** u6BUS, int_T u6BUSWidth, void** u7BUS, int_T u7BUSWidth, void** u8BUS, int_T u8BUSWidth, void** u9BUS, int_T u9BUSWidth, void** u10BUS, int_T u10BUSWidth, void** u11BUS, int_T u11BUSWidth, void** u12BUS, int_T u12BUSWidth, void** u13BUS, int_T u13BUSWidth, void** u14BUS, int_T u14BUSWidth, void** u26BUS, int_T u26BUSWidth, void** u27BUS, int_T u27BUSWidth);
        extern int sfun_Fusion_road_wrapper_freemem(void** y1BUS, void** y2BUS, void** y4BUS, void** y5BUS, void** y6BUS, void** y7BUS, void** y8BUS, void** y9BUS, void** y10BUS, void** y11BUS, void** y12BUS, void** y13BUS, void** y14BUS, void** y15BUS, void** y16BUS, void** y17BUS, void** y18BUS, void** y19BUS, void** y20BUS, void** y21BUS, void** y22BUS, void** y23BUS, void** y24BUS, void** u1BUS, void** u2BUS, void** u4BUS, void** u5BUS, void** u6BUS, void** u7BUS, void** u8BUS, void** u9BUS, void** u10BUS, void** u11BUS, void** u12BUS, void** u13BUS, void** u14BUS, void** u26BUS, void** u27BUS);

        extern void sfun_Fusion_road_wrapper_Start(void);
        extern void sfun_Fusion_road_wrapper_Output(const void* u1, void* u1BUS, const void* u2, void* u2BUS, const uint8_T* u3, const void* u4, void* u4BUS, const void* u5, void* u5BUS, const void* u6, void* u6BUS, const void* u7, void* u7BUS, const void* u8, void* u8BUS, const void* u9, void* u9BUS, const void* u10, void* u10BUS, const void* u11, void* u11BUS, const void* u12, void* u12BUS, const void* u13, void* u13BUS, const void* u14, void* u14BUS, const real32_T* u15, const real32_T* u16, const real32_T* u17, const real32_T* u18, const real32_T* u19, const real32_T* u20, const real32_T* u21, const real32_T* u22, const real32_T* u23, const real32_T* u24, const uint32_T* u25, const void* u26, void* u26BUS, const void* u27, void* u27BUS, const uint8_T* u28,  void* y1, void* y1BUS,  void* y2, void* y2BUS,  uint32_T* y3,  void* y4, void* y4BUS,  void* y5, void* y5BUS,  void* y6, void* y6BUS,  void* y7, void* y7BUS,  void* y8, void* y8BUS,  void* y9, void* y9BUS,  void* y10, void* y10BUS,  void* y11, void* y11BUS,  void* y12, void* y12BUS,  void* y13, void* y13BUS,  void* y14, void* y14BUS,  void* y15, void* y15BUS,  void* y16, void* y16BUS,  void* y17, void* y17BUS,  void* y18, void* y18BUS,  void* y19, void* y19BUS,  void* y20, void* y20BUS,  void* y21, void* y21BUS,  void* y22, void* y22BUS,  void* y23, void* y23BUS,  void* y24, void* y24BUS);
        
        #endif
        
        %closefile hFile
        
        %assign cFileName = FcnGenerateUniqueFileName("sfun_Fusion_road_wrapper", "source")
        %openfile cFile = "%<cFileName>.c"
        %selectfile cFile
        #include <stdlib.h>
        #include <string.h>
        #ifdef MATLAB_MEX_FILE
        #include "tmwtypes.h"
        #else
        #include "rtwtypes.h"
        #endif

        #include "FusionApi.h"

        #include "RFM_Rte_Type.h"

        int sfun_Fusion_road_wrapper_allocmem(void** y1BUS, int_T y1BUSWidth, void** y2BUS, int_T y2BUSWidth, void** y4BUS, int_T y4BUSWidth, void** y5BUS, int_T y5BUSWidth, void** y6BUS, int_T y6BUSWidth, void** y7BUS, int_T y7BUSWidth, void** y8BUS, int_T y8BUSWidth, void** y9BUS, int_T y9BUSWidth, void** y10BUS, int_T y10BUSWidth, void** y11BUS, int_T y11BUSWidth, void** y12BUS, int_T y12BUSWidth, void** y13BUS, int_T y13BUSWidth, void** y14BUS, int_T y14BUSWidth, void** y15BUS, int_T y15BUSWidth, void** y16BUS, int_T y16BUSWidth, void** y17BUS, int_T y17BUSWidth, void** y18BUS, int_T y18BUSWidth, void** y19BUS, int_T y19BUSWidth, void** y20BUS, int_T y20BUSWidth, void** y21BUS, int_T y21BUSWidth, void** y22BUS, int_T y22BUSWidth, void** y23BUS, int_T y23BUSWidth, void** y24BUS, int_T y24BUSWidth, void** u1BUS, int_T u1BUSWidth, void** u2BUS, int_T u2BUSWidth, void** u4BUS, int_T u4BUSWidth, void** u5BUS, int_T u5BUSWidth, void** u6BUS, int_T u6BUSWidth, void** u7BUS, int_T u7BUSWidth, void** u8BUS, int_T u8BUSWidth, void** u9BUS, int_T u9BUSWidth, void** u10BUS, int_T u10BUSWidth, void** u11BUS, int_T u11BUSWidth, void** u12BUS, int_T u12BUSWidth, void** u13BUS, int_T u13BUSWidth, void** u14BUS, int_T u14BUSWidth, void** u26BUS, int_T u26BUSWidth, void** u27BUS, int_T u27BUSWidth) {
            *y1BUS = calloc(sizeof(RFM_ROAD_BUS), y1BUSWidth);
            if (*y1BUS==NULL) return -1;
            *y2BUS = calloc(sizeof(RFM_TSR_BUS), y2BUSWidth);
            if (*y2BUS==NULL) return -1;
            *y4BUS = calloc(sizeof(RFM_LANE_BUS), y4BUSWidth);
            if (*y4BUS==NULL) return -1;
            *y5BUS = calloc(sizeof(RFM_LANE_BUS), y5BUSWidth);
            if (*y5BUS==NULL) return -1;
            *y6BUS = calloc(sizeof(RFM_LANE_BUS), y6BUSWidth);
            if (*y6BUS==NULL) return -1;
            *y7BUS = calloc(sizeof(RFM_LANE_BUS), y7BUSWidth);
            if (*y7BUS==NULL) return -1;
            *y8BUS = calloc(sizeof(RFM_INTERSEC_ALERT_BUS), y8BUSWidth);
            if (*y8BUS==NULL) return -1;
            *y9BUS = calloc(sizeof(RFM_BRANCH_BUS), y9BUSWidth);
            if (*y9BUS==NULL) return -1;
            *y10BUS = calloc(sizeof(RFM_REC_LANES_BUS), y10BUSWidth);
            if (*y10BUS==NULL) return -1;
            *y11BUS = calloc(sizeof(RFM_LINE_BUS), y11BUSWidth);
            if (*y11BUS==NULL) return -1;
            *y12BUS = calloc(sizeof(RFM_LINE_BUS), y12BUSWidth);
            if (*y12BUS==NULL) return -1;
            *y13BUS = calloc(sizeof(RFM_LINE_BUS), y13BUSWidth);
            if (*y13BUS==NULL) return -1;
            *y14BUS = calloc(sizeof(RFM_LINE_BUS), y14BUSWidth);
            if (*y14BUS==NULL) return -1;
            *y15BUS = calloc(sizeof(RFM_LINE_BUS), y15BUSWidth);
            if (*y15BUS==NULL) return -1;
            *y16BUS = calloc(sizeof(RFM_LINE_BUS), y16BUSWidth);
            if (*y16BUS==NULL) return -1;
            *y17BUS = calloc(sizeof(RFM_LINE_BUS), y17BUSWidth);
            if (*y17BUS==NULL) return -1;
            *y18BUS = calloc(sizeof(RFM_LINE_BUS), y18BUSWidth);
            if (*y18BUS==NULL) return -1;
            *y19BUS = calloc(sizeof(RFM_LINE_BUS), y19BUSWidth);
            if (*y19BUS==NULL) return -1;
            *y20BUS = calloc(sizeof(RFM_LINE_BUS), y20BUSWidth);
            if (*y20BUS==NULL) return -1;
            *y21BUS = calloc(sizeof(RFM_LINE_BUS), y21BUSWidth);
            if (*y21BUS==NULL) return -1;
            *y22BUS = calloc(sizeof(RFM_LINE_BUS), y22BUSWidth);
            if (*y22BUS==NULL) return -1;
            *y23BUS = calloc(sizeof(RFM_LINE_BUS), y23BUSWidth);
            if (*y23BUS==NULL) return -1;
            *y24BUS = calloc(sizeof(RFM_LINE_BUS), y24BUSWidth);
            if (*y24BUS==NULL) return -1;
            *u1BUS = calloc(sizeof(EHRV2_ROAD_ATTR_INFO_BUS), u1BUSWidth);
            if (*u1BUS==NULL) return -1;
            *u2BUS = calloc(sizeof(EHRV2_CTRL_INFO_BUS), u2BUSWidth);
            if (*u2BUS==NULL) return -1;
            *u4BUS = calloc(sizeof(MRR_HDR_BUS), u4BUSWidth);
            if (*u4BUS==NULL) return -1;
            *u5BUS = calloc(sizeof(MRR_OBJ_BUS), u5BUSWidth);
            if (*u5BUS==NULL) return -1;
            *u6BUS = calloc(sizeof(EQ4_FSPX_BUS), u6BUSWidth);
            if (*u6BUS==NULL) return -1;
            *u7BUS = calloc(sizeof(EQ4_LA_BUS), u7BUSWidth);
            if (*u7BUS==NULL) return -1;
            *u8BUS = calloc(sizeof(EQ4_LAP_BUS), u8BUSWidth);
            if (*u8BUS==NULL) return -1;
            *u9BUS = calloc(sizeof(EQ4_LH_BUS), u9BUSWidth);
            if (*u9BUS==NULL) return -1;
            *u10BUS = calloc(sizeof(EQ4_LRE_BUS), u10BUSWidth);
            if (*u10BUS==NULL) return -1;
            *u11BUS = calloc(sizeof(EQ4_TFL_SPOTS_BUS), u11BUSWidth);
            if (*u11BUS==NULL) return -1;
            *u12BUS = calloc(sizeof(EQ4_TFL_STRUCT_BUS), u12BUSWidth);
            if (*u12BUS==NULL) return -1;
            *u13BUS = calloc(sizeof(EQ4_TSR_BUS), u13BUSWidth);
            if (*u13BUS==NULL) return -1;
            *u14BUS = calloc(sizeof(EQ4_FS_BUS), u14BUSWidth);
            if (*u14BUS==NULL) return -1;
            *u26BUS = calloc(sizeof(StbM_TimeStampExtendedType), u26BUSWidth);
            if (*u26BUS==NULL) return -1;
            *u27BUS = calloc(sizeof(StbM_UserDataType), u27BUSWidth);
            if (*u27BUS==NULL) return -1;
            return 0;
        }
        
        int sfun_Fusion_road_wrapper_freemem(void** y1BUS, void** y2BUS, void** y4BUS, void** y5BUS, void** y6BUS, void** y7BUS, void** y8BUS, void** y9BUS, void** y10BUS, void** y11BUS, void** y12BUS, void** y13BUS, void** y14BUS, void** y15BUS, void** y16BUS, void** y17BUS, void** y18BUS, void** y19BUS, void** y20BUS, void** y21BUS, void** y22BUS, void** y23BUS, void** y24BUS, void** u1BUS, void** u2BUS, void** u4BUS, void** u5BUS, void** u6BUS, void** u7BUS, void** u8BUS, void** u9BUS, void** u10BUS, void** u11BUS, void** u12BUS, void** u13BUS, void** u14BUS, void** u26BUS, void** u27BUS) {
            if (*y1BUS!=NULL) free(*y1BUS);
            *y1BUS = NULL;
            if (*y2BUS!=NULL) free(*y2BUS);
            *y2BUS = NULL;
            if (*y4BUS!=NULL) free(*y4BUS);
            *y4BUS = NULL;
            if (*y5BUS!=NULL) free(*y5BUS);
            *y5BUS = NULL;
            if (*y6BUS!=NULL) free(*y6BUS);
            *y6BUS = NULL;
            if (*y7BUS!=NULL) free(*y7BUS);
            *y7BUS = NULL;
            if (*y8BUS!=NULL) free(*y8BUS);
            *y8BUS = NULL;
            if (*y9BUS!=NULL) free(*y9BUS);
            *y9BUS = NULL;
            if (*y10BUS!=NULL) free(*y10BUS);
            *y10BUS = NULL;
            if (*y11BUS!=NULL) free(*y11BUS);
            *y11BUS = NULL;
            if (*y12BUS!=NULL) free(*y12BUS);
            *y12BUS = NULL;
            if (*y13BUS!=NULL) free(*y13BUS);
            *y13BUS = NULL;
            if (*y14BUS!=NULL) free(*y14BUS);
            *y14BUS = NULL;
            if (*y15BUS!=NULL) free(*y15BUS);
            *y15BUS = NULL;
            if (*y16BUS!=NULL) free(*y16BUS);
            *y16BUS = NULL;
            if (*y17BUS!=NULL) free(*y17BUS);
            *y17BUS = NULL;
            if (*y18BUS!=NULL) free(*y18BUS);
            *y18BUS = NULL;
            if (*y19BUS!=NULL) free(*y19BUS);
            *y19BUS = NULL;
            if (*y20BUS!=NULL) free(*y20BUS);
            *y20BUS = NULL;
            if (*y21BUS!=NULL) free(*y21BUS);
            *y21BUS = NULL;
            if (*y22BUS!=NULL) free(*y22BUS);
            *y22BUS = NULL;
            if (*y23BUS!=NULL) free(*y23BUS);
            *y23BUS = NULL;
            if (*y24BUS!=NULL) free(*y24BUS);
            *y24BUS = NULL;
            if (*u1BUS!=NULL) free(*u1BUS);
            *u1BUS = NULL;
            if (*u2BUS!=NULL) free(*u2BUS);
            *u2BUS = NULL;
            if (*u4BUS!=NULL) free(*u4BUS);
            *u4BUS = NULL;
            if (*u5BUS!=NULL) free(*u5BUS);
            *u5BUS = NULL;
            if (*u6BUS!=NULL) free(*u6BUS);
            *u6BUS = NULL;
            if (*u7BUS!=NULL) free(*u7BUS);
            *u7BUS = NULL;
            if (*u8BUS!=NULL) free(*u8BUS);
            *u8BUS = NULL;
            if (*u9BUS!=NULL) free(*u9BUS);
            *u9BUS = NULL;
            if (*u10BUS!=NULL) free(*u10BUS);
            *u10BUS = NULL;
            if (*u11BUS!=NULL) free(*u11BUS);
            *u11BUS = NULL;
            if (*u12BUS!=NULL) free(*u12BUS);
            *u12BUS = NULL;
            if (*u13BUS!=NULL) free(*u13BUS);
            *u13BUS = NULL;
            if (*u14BUS!=NULL) free(*u14BUS);
            *u14BUS = NULL;
            if (*u26BUS!=NULL) free(*u26BUS);
            *u26BUS = NULL;
            if (*u27BUS!=NULL) free(*u27BUS);
            *u27BUS = NULL;
            return 0;
        }

        void sfun_Fusion_road_wrapper_Start(void) {
            Fusion_Road_Init();
        }

        void sfun_Fusion_road_wrapper_Output(const void* u1, void* u1BUS, const void* u2, void* u2BUS, const uint8_T* u3, const void* u4, void* u4BUS, const void* u5, void* u5BUS, const void* u6, void* u6BUS, const void* u7, void* u7BUS, const void* u8, void* u8BUS, const void* u9, void* u9BUS, const void* u10, void* u10BUS, const void* u11, void* u11BUS, const void* u12, void* u12BUS, const void* u13, void* u13BUS, const void* u14, void* u14BUS, const real32_T* u15, const real32_T* u16, const real32_T* u17, const real32_T* u18, const real32_T* u19, const real32_T* u20, const real32_T* u21, const real32_T* u22, const real32_T* u23, const real32_T* u24, const uint32_T* u25, const void* u26, void* u26BUS, const void* u27, void* u27BUS, const uint8_T* u28,  void* y1, void* y1BUS,  void* y2, void* y2BUS,  uint32_T* y3,  void* y4, void* y4BUS,  void* y5, void* y5BUS,  void* y6, void* y6BUS,  void* y7, void* y7BUS,  void* y8, void* y8BUS,  void* y9, void* y9BUS,  void* y10, void* y10BUS,  void* y11, void* y11BUS,  void* y12, void* y12BUS,  void* y13, void* y13BUS,  void* y14, void* y14BUS,  void* y15, void* y15BUS,  void* y16, void* y16BUS,  void* y17, void* y17BUS,  void* y18, void* y18BUS,  void* y19, void* y19BUS,  void* y20, void* y20BUS,  void* y21, void* y21BUS,  void* y22, void* y22BUS,  void* y23, void* y23BUS,  void* y24, void* y24BUS) {

            /* Assign the Simulink structure u1 to user structure u1BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(0)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EHRV2_ROAD_ATTR_INFO_BUS *)u1BUS)", "(char *)u1", 0)>


            /* Assign the Simulink structure u2 to user structure u2BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(1)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EHRV2_CTRL_INFO_BUS *)u2BUS)", "(char *)u2", 0)>


            /* Assign the Simulink structure u4 to user structure u4BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(3)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(MRR_HDR_BUS *)u4BUS)", "(char *)u4", 0)>


            /* Assign the Simulink structure u5 to user structure u5BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(4)
            %assign width = LibBlockInputSignalWidth(4)
            %assign optStar = ISEQUAL(width,1) ? "*" : ""
            %assign isCmplx = LibBlockInputSignalIsComplex(4)
            %<SLibAssignSLStructToUserStructND(dTypeId, width, "(%<optStar>(MRR_OBJ_BUS *)u5BUS)", "(char *)u5", Matrix(1,1) [0], 0, isCmplx)>

            /* Assign the Simulink structure u6 to user structure u6BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(5)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EQ4_FSPX_BUS *)u6BUS)", "(char *)u6", 0)>


            /* Assign the Simulink structure u7 to user structure u7BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(6)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EQ4_LA_BUS *)u7BUS)", "(char *)u7", 0)>


            /* Assign the Simulink structure u8 to user structure u8BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(7)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EQ4_LAP_BUS *)u8BUS)", "(char *)u8", 0)>


            /* Assign the Simulink structure u9 to user structure u9BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(8)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EQ4_LH_BUS *)u9BUS)", "(char *)u9", 0)>


            /* Assign the Simulink structure u10 to user structure u10BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(9)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EQ4_LRE_BUS *)u10BUS)", "(char *)u10", 0)>


            /* Assign the Simulink structure u11 to user structure u11BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(10)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EQ4_TFL_SPOTS_BUS *)u11BUS)", "(char *)u11", 0)>


            /* Assign the Simulink structure u12 to user structure u12BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(11)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EQ4_TFL_STRUCT_BUS *)u12BUS)", "(char *)u12", 0)>


            /* Assign the Simulink structure u13 to user structure u13BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(12)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EQ4_TSR_BUS *)u13BUS)", "(char *)u13", 0)>


            /* Assign the Simulink structure u14 to user structure u14BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(13)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EQ4_FS_BUS *)u14BUS)", "(char *)u14", 0)>


            /* Assign the Simulink structure u26 to user structure u26BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(25)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(StbM_TimeStampExtendedType *)u26BUS)", "(char *)u26", 0)>


            /* Assign the Simulink structure u27 to user structure u27BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(26)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(StbM_UserDataType *)u27BUS)", "(char *)u27", 0)>

            Fusion_Road_Main((EHRV2_ROAD_ATTR_INFO_BUS *) u1BUS, (EHRV2_CTRL_INFO_BUS *) u2BUS, (uint8_T*)(u3), (MRR_HDR_BUS *) u4BUS, (MRR_OBJ_BUS *) u5BUS, (EQ4_FSPX_BUS *) u6BUS, (EQ4_LA_BUS *) u7BUS, (EQ4_LAP_BUS *) u8BUS, (EQ4_LH_BUS *) u9BUS, (EQ4_LRE_BUS *) u10BUS, (EQ4_TFL_SPOTS_BUS *) u11BUS, (EQ4_TFL_STRUCT_BUS *) u12BUS, (EQ4_TSR_BUS *) u13BUS, (EQ4_FS_BUS *) u14BUS, (real32_T*)(u15), (real32_T*)(u16), (real32_T*)(u17), (real32_T*)(u18), (real32_T*)(u19), (real32_T*)(u20), (real32_T*)(u21), (real32_T*)(u22), (real32_T*)(u23), (real32_T*)(u24), (uint32_T*)(u25), (StbM_TimeStampExtendedType *) u26BUS, (StbM_UserDataType *) u27BUS, (uint8_T*)(u28), (RFM_ROAD_BUS *) y1BUS, (RFM_TSR_BUS *) y2BUS, y3, (RFM_LANE_BUS *) y4BUS, (RFM_LANE_BUS *) y5BUS, (RFM_LANE_BUS *) y6BUS, (RFM_LANE_BUS *) y7BUS, (RFM_INTERSEC_ALERT_BUS *) y8BUS, (RFM_BRANCH_BUS *) y9BUS, (RFM_REC_LANES_BUS *) y10BUS, (RFM_LINE_BUS *) y11BUS, (RFM_LINE_BUS *) y12BUS, (RFM_LINE_BUS *) y13BUS, (RFM_LINE_BUS *) y14BUS, (RFM_LINE_BUS *) y15BUS, (RFM_LINE_BUS *) y16BUS, (RFM_LINE_BUS *) y17BUS, (RFM_LINE_BUS *) y18BUS, (RFM_LINE_BUS *) y19BUS, (RFM_LINE_BUS *) y20BUS, (RFM_LINE_BUS *) y21BUS, (RFM_LINE_BUS *) y22BUS, (RFM_LINE_BUS *) y23BUS, (RFM_LINE_BUS *) y24BUS);

            /* Assign the user structure y1BUS to the Simulink structure y1 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(0)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y1", "(*(RFM_ROAD_BUS *)y1BUS)", 0)>

            /* Assign the user structure y2BUS to the Simulink structure y2 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(1)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y2", "(*(RFM_TSR_BUS *)y2BUS)", 0)>

            /* Assign the user structure y4BUS to the Simulink structure y4 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(3)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y4", "(*(RFM_LANE_BUS *)y4BUS)", 0)>

            /* Assign the user structure y5BUS to the Simulink structure y5 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(4)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y5", "(*(RFM_LANE_BUS *)y5BUS)", 0)>

            /* Assign the user structure y6BUS to the Simulink structure y6 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(5)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y6", "(*(RFM_LANE_BUS *)y6BUS)", 0)>

            /* Assign the user structure y7BUS to the Simulink structure y7 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(6)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y7", "(*(RFM_LANE_BUS *)y7BUS)", 0)>

            /* Assign the user structure y8BUS to the Simulink structure y8 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(7)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y8", "(*(RFM_INTERSEC_ALERT_BUS *)y8BUS)", 0)>

            /* Assign the user structure y9BUS to the Simulink structure y9 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(8)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y9", "(*(RFM_BRANCH_BUS *)y9BUS)", 0)>

            /* Assign the user structure y10BUS to the Simulink structure y10 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(9)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y10", "(*(RFM_REC_LANES_BUS *)y10BUS)", 0)>

            /* Assign the user structure y11BUS to the Simulink structure y11 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(10)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y11", "(*(RFM_LINE_BUS *)y11BUS)", 0)>

            /* Assign the user structure y12BUS to the Simulink structure y12 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(11)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y12", "(*(RFM_LINE_BUS *)y12BUS)", 0)>

            /* Assign the user structure y13BUS to the Simulink structure y13 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(12)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y13", "(*(RFM_LINE_BUS *)y13BUS)", 0)>

            /* Assign the user structure y14BUS to the Simulink structure y14 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(13)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y14", "(*(RFM_LINE_BUS *)y14BUS)", 0)>

            /* Assign the user structure y15BUS to the Simulink structure y15 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(14)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y15", "(*(RFM_LINE_BUS *)y15BUS)", 0)>

            /* Assign the user structure y16BUS to the Simulink structure y16 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(15)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y16", "(*(RFM_LINE_BUS *)y16BUS)", 0)>

            /* Assign the user structure y17BUS to the Simulink structure y17 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(16)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y17", "(*(RFM_LINE_BUS *)y17BUS)", 0)>

            /* Assign the user structure y18BUS to the Simulink structure y18 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(17)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y18", "(*(RFM_LINE_BUS *)y18BUS)", 0)>

            /* Assign the user structure y19BUS to the Simulink structure y19 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(18)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y19", "(*(RFM_LINE_BUS *)y19BUS)", 0)>

            /* Assign the user structure y20BUS to the Simulink structure y20 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(19)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y20", "(*(RFM_LINE_BUS *)y20BUS)", 0)>

            /* Assign the user structure y21BUS to the Simulink structure y21 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(20)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y21", "(*(RFM_LINE_BUS *)y21BUS)", 0)>

            /* Assign the user structure y22BUS to the Simulink structure y22 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(21)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y22", "(*(RFM_LINE_BUS *)y22BUS)", 0)>

            /* Assign the user structure y23BUS to the Simulink structure y23 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(22)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y23", "(*(RFM_LINE_BUS *)y23BUS)", 0)>

            /* Assign the user structure y24BUS to the Simulink structure y24 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(23)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y24", "(*(RFM_LINE_BUS *)y24BUS)", 0)>
        }

        %closefile cFile

        %<LibAddToCommonIncludes("%<hFileName>.h")>
        %<LibAddToModelSources("%<cFileName>")>
    %else
        %<LibAddToCommonIncludes("FusionApi.h")>
        %<LibAddToCommonIncludes("RFM_Rte_Type.h")>
    %endif
    %<SLibAddToStaticSources("FusionApi.c")>
    %<SLibAddToStaticSources("HWAapi.c")>
    %<SLibAddToStaticSources("HWA_R.c")>
    %<SLibAddToStaticSources("HWAafRoadArithm.c")>
    %<SLibAddToStaticSources("HWABoundary.c")>
    %<SLibAddToStaticSources("HWABoundaryLinePredicted.c")>
    %<SLibAddToStaticSources("HWALineFusion.c")>
    %<SLibAddToStaticSources("HWAObejctManage.c")>
    %<SLibAddToStaticSources("HWARoadLayout.c")>
    %<SLibAddToStaticSources("HWARoadPreprocess.c")>
    %<SLibAddToStaticSources("HWARoadSceneRecognition.c")>
    %<SLibAddToStaticSources("HWASpeedLimit.c")>
    %<SLibAddToStaticSources("HWAOutputSendCallback.c")>
%endfunction

%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup (block, system) void
    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
    %else
        %<LibBlockSetIsExpressionCompliant(block)>
    %endif
%endfunction

%% Function: Start ========================================================
%function Start (block, system) Output
    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
        %assign y1BUS_addr = "&" + LibBlockPWork("", "", "", 0)
        %assign y2BUS_addr = "&" + LibBlockPWork("", "", "", 1)
        %assign y4BUS_addr = "&" + LibBlockPWork("", "", "", 2)
        %assign y5BUS_addr = "&" + LibBlockPWork("", "", "", 3)
        %assign y6BUS_addr = "&" + LibBlockPWork("", "", "", 4)
        %assign y7BUS_addr = "&" + LibBlockPWork("", "", "", 5)
        %assign y8BUS_addr = "&" + LibBlockPWork("", "", "", 6)
        %assign y9BUS_addr = "&" + LibBlockPWork("", "", "", 7)
        %assign y10BUS_addr = "&" + LibBlockPWork("", "", "", 8)
        %assign y11BUS_addr = "&" + LibBlockPWork("", "", "", 9)
        %assign y12BUS_addr = "&" + LibBlockPWork("", "", "", 10)
        %assign y13BUS_addr = "&" + LibBlockPWork("", "", "", 11)
        %assign y14BUS_addr = "&" + LibBlockPWork("", "", "", 12)
        %assign y15BUS_addr = "&" + LibBlockPWork("", "", "", 13)
        %assign y16BUS_addr = "&" + LibBlockPWork("", "", "", 14)
        %assign y17BUS_addr = "&" + LibBlockPWork("", "", "", 15)
        %assign y18BUS_addr = "&" + LibBlockPWork("", "", "", 16)
        %assign y19BUS_addr = "&" + LibBlockPWork("", "", "", 17)
        %assign y20BUS_addr = "&" + LibBlockPWork("", "", "", 18)
        %assign y21BUS_addr = "&" + LibBlockPWork("", "", "", 19)
        %assign y22BUS_addr = "&" + LibBlockPWork("", "", "", 20)
        %assign y23BUS_addr = "&" + LibBlockPWork("", "", "", 21)
        %assign y24BUS_addr = "&" + LibBlockPWork("", "", "", 22)
        %assign u1BUS_addr = "&" + LibBlockPWork("", "", "", 23)
        %assign u2BUS_addr = "&" + LibBlockPWork("", "", "", 24)
        %assign u4BUS_addr = "&" + LibBlockPWork("", "", "", 25)
        %assign u5BUS_addr = "&" + LibBlockPWork("", "", "", 26)
        %assign u6BUS_addr = "&" + LibBlockPWork("", "", "", 27)
        %assign u7BUS_addr = "&" + LibBlockPWork("", "", "", 28)
        %assign u8BUS_addr = "&" + LibBlockPWork("", "", "", 29)
        %assign u9BUS_addr = "&" + LibBlockPWork("", "", "", 30)
        %assign u10BUS_addr = "&" + LibBlockPWork("", "", "", 31)
        %assign u11BUS_addr = "&" + LibBlockPWork("", "", "", 32)
        %assign u12BUS_addr = "&" + LibBlockPWork("", "", "", 33)
        %assign u13BUS_addr = "&" + LibBlockPWork("", "", "", 34)
        %assign u14BUS_addr = "&" + LibBlockPWork("", "", "", 35)
        %assign u26BUS_addr = "&" + LibBlockPWork("", "", "", 36)
        %assign u27BUS_addr = "&" + LibBlockPWork("", "", "", 37)
        %assign blockPath = STRING(LibGetBlockPath(block))
        if (sfun_Fusion_road_wrapper_allocmem(%<y1BUS_addr>, %<LibBlockOutputSignalWidth(0)>, %<y2BUS_addr>, %<LibBlockOutputSignalWidth(1)>, %<y4BUS_addr>, %<LibBlockOutputSignalWidth(3)>, %<y5BUS_addr>, %<LibBlockOutputSignalWidth(4)>, %<y6BUS_addr>, %<LibBlockOutputSignalWidth(5)>, %<y7BUS_addr>, %<LibBlockOutputSignalWidth(6)>, %<y8BUS_addr>, %<LibBlockOutputSignalWidth(7)>, %<y9BUS_addr>, %<LibBlockOutputSignalWidth(8)>, %<y10BUS_addr>, %<LibBlockOutputSignalWidth(9)>, %<y11BUS_addr>, %<LibBlockOutputSignalWidth(10)>, %<y12BUS_addr>, %<LibBlockOutputSignalWidth(11)>, %<y13BUS_addr>, %<LibBlockOutputSignalWidth(12)>, %<y14BUS_addr>, %<LibBlockOutputSignalWidth(13)>, %<y15BUS_addr>, %<LibBlockOutputSignalWidth(14)>, %<y16BUS_addr>, %<LibBlockOutputSignalWidth(15)>, %<y17BUS_addr>, %<LibBlockOutputSignalWidth(16)>, %<y18BUS_addr>, %<LibBlockOutputSignalWidth(17)>, %<y19BUS_addr>, %<LibBlockOutputSignalWidth(18)>, %<y20BUS_addr>, %<LibBlockOutputSignalWidth(19)>, %<y21BUS_addr>, %<LibBlockOutputSignalWidth(20)>, %<y22BUS_addr>, %<LibBlockOutputSignalWidth(21)>, %<y23BUS_addr>, %<LibBlockOutputSignalWidth(22)>, %<y24BUS_addr>, %<LibBlockOutputSignalWidth(23)>, %<u1BUS_addr>, %<LibBlockInputSignalWidth(0)>, %<u2BUS_addr>, %<LibBlockInputSignalWidth(1)>, %<u4BUS_addr>, %<LibBlockInputSignalWidth(3)>, %<u5BUS_addr>, %<LibBlockInputSignalWidth(4)>, %<u6BUS_addr>, %<LibBlockInputSignalWidth(5)>, %<u7BUS_addr>, %<LibBlockInputSignalWidth(6)>, %<u8BUS_addr>, %<LibBlockInputSignalWidth(7)>, %<u9BUS_addr>, %<LibBlockInputSignalWidth(8)>, %<u10BUS_addr>, %<LibBlockInputSignalWidth(9)>, %<u11BUS_addr>, %<LibBlockInputSignalWidth(10)>, %<u12BUS_addr>, %<LibBlockInputSignalWidth(11)>, %<u13BUS_addr>, %<LibBlockInputSignalWidth(12)>, %<u14BUS_addr>, %<LibBlockInputSignalWidth(13)>, %<u26BUS_addr>, %<LibBlockInputSignalWidth(25)>, %<u27BUS_addr>, %<LibBlockInputSignalWidth(26)>)!=0) %<LibSetRTModelErrorStatus("\"Memory allocation failure for %<blockPath>\"")>;
        %% 
        /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
        sfun_Fusion_road_wrapper_Start();
    %else
        %% 
        Fusion_Road_Init();
    %endif
%endfunction

%% Function: Outputs ======================================================
%function Outputs (block, system) Output
    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
        %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
        %assign u1BUS_ptr = LibBlockPWork("", "", "", 23)
        %assign u2_ptr = LibBlockInputSignalAddr(1, "", "", 0)
        %assign u2BUS_ptr = LibBlockPWork("", "", "", 24)
        %assign u3_ptr = LibBlockInputSignalAddr(2, "", "", 0)
        %assign u4_ptr = LibBlockInputSignalAddr(3, "", "", 0)
        %assign u4BUS_ptr = LibBlockPWork("", "", "", 25)
        %assign u5_ptr = LibBlockInputSignalAddr(4, "", "", 0)
        %assign u5BUS_ptr = LibBlockPWork("", "", "", 26)
        %assign u6_ptr = LibBlockInputSignalAddr(5, "", "", 0)
        %assign u6BUS_ptr = LibBlockPWork("", "", "", 27)
        %assign u7_ptr = LibBlockInputSignalAddr(6, "", "", 0)
        %assign u7BUS_ptr = LibBlockPWork("", "", "", 28)
        %assign u8_ptr = LibBlockInputSignalAddr(7, "", "", 0)
        %assign u8BUS_ptr = LibBlockPWork("", "", "", 29)
        %assign u9_ptr = LibBlockInputSignalAddr(8, "", "", 0)
        %assign u9BUS_ptr = LibBlockPWork("", "", "", 30)
        %assign u10_ptr = LibBlockInputSignalAddr(9, "", "", 0)
        %assign u10BUS_ptr = LibBlockPWork("", "", "", 31)
        %assign u11_ptr = LibBlockInputSignalAddr(10, "", "", 0)
        %assign u11BUS_ptr = LibBlockPWork("", "", "", 32)
        %assign u12_ptr = LibBlockInputSignalAddr(11, "", "", 0)
        %assign u12BUS_ptr = LibBlockPWork("", "", "", 33)
        %assign u13_ptr = LibBlockInputSignalAddr(12, "", "", 0)
        %assign u13BUS_ptr = LibBlockPWork("", "", "", 34)
        %assign u14_ptr = LibBlockInputSignalAddr(13, "", "", 0)
        %assign u14BUS_ptr = LibBlockPWork("", "", "", 35)
        %assign u15_ptr = LibBlockInputSignalAddr(14, "", "", 0)
        %assign u16_ptr = LibBlockInputSignalAddr(15, "", "", 0)
        %assign u17_ptr = LibBlockInputSignalAddr(16, "", "", 0)
        %assign u18_ptr = LibBlockInputSignalAddr(17, "", "", 0)
        %assign u19_ptr = LibBlockInputSignalAddr(18, "", "", 0)
        %assign u20_ptr = LibBlockInputSignalAddr(19, "", "", 0)
        %assign u21_ptr = LibBlockInputSignalAddr(20, "", "", 0)
        %assign u22_ptr = LibBlockInputSignalAddr(21, "", "", 0)
        %assign u23_ptr = LibBlockInputSignalAddr(22, "", "", 0)
        %assign u24_ptr = LibBlockInputSignalAddr(23, "", "", 0)
        %assign u25_ptr = LibBlockInputSignalAddr(24, "", "", 0)
        %assign u26_ptr = LibBlockInputSignalAddr(25, "", "", 0)
        %assign u26BUS_ptr = LibBlockPWork("", "", "", 36)
        %assign u27_ptr = LibBlockInputSignalAddr(26, "", "", 0)
        %assign u27BUS_ptr = LibBlockPWork("", "", "", 37)
        %assign u28_ptr = LibBlockInputSignalAddr(27, "", "", 0)
        %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
        %assign y1BUS_ptr = LibBlockPWork("", "", "", 0)
        %assign y2_ptr = LibBlockOutputSignalAddr(1, "", "", 0)
        %assign y2BUS_ptr = LibBlockPWork("", "", "", 1)
        %assign y3_ptr = LibBlockOutputSignalAddr(2, "", "", 0)
        %assign y4_ptr = LibBlockOutputSignalAddr(3, "", "", 0)
        %assign y4BUS_ptr = LibBlockPWork("", "", "", 2)
        %assign y5_ptr = LibBlockOutputSignalAddr(4, "", "", 0)
        %assign y5BUS_ptr = LibBlockPWork("", "", "", 3)
        %assign y6_ptr = LibBlockOutputSignalAddr(5, "", "", 0)
        %assign y6BUS_ptr = LibBlockPWork("", "", "", 4)
        %assign y7_ptr = LibBlockOutputSignalAddr(6, "", "", 0)
        %assign y7BUS_ptr = LibBlockPWork("", "", "", 5)
        %assign y8_ptr = LibBlockOutputSignalAddr(7, "", "", 0)
        %assign y8BUS_ptr = LibBlockPWork("", "", "", 6)
        %assign y9_ptr = LibBlockOutputSignalAddr(8, "", "", 0)
        %assign y9BUS_ptr = LibBlockPWork("", "", "", 7)
        %assign y10_ptr = LibBlockOutputSignalAddr(9, "", "", 0)
        %assign y10BUS_ptr = LibBlockPWork("", "", "", 8)
        %assign y11_ptr = LibBlockOutputSignalAddr(10, "", "", 0)
        %assign y11BUS_ptr = LibBlockPWork("", "", "", 9)
        %assign y12_ptr = LibBlockOutputSignalAddr(11, "", "", 0)
        %assign y12BUS_ptr = LibBlockPWork("", "", "", 10)
        %assign y13_ptr = LibBlockOutputSignalAddr(12, "", "", 0)
        %assign y13BUS_ptr = LibBlockPWork("", "", "", 11)
        %assign y14_ptr = LibBlockOutputSignalAddr(13, "", "", 0)
        %assign y14BUS_ptr = LibBlockPWork("", "", "", 12)
        %assign y15_ptr = LibBlockOutputSignalAddr(14, "", "", 0)
        %assign y15BUS_ptr = LibBlockPWork("", "", "", 13)
        %assign y16_ptr = LibBlockOutputSignalAddr(15, "", "", 0)
        %assign y16BUS_ptr = LibBlockPWork("", "", "", 14)
        %assign y17_ptr = LibBlockOutputSignalAddr(16, "", "", 0)
        %assign y17BUS_ptr = LibBlockPWork("", "", "", 15)
        %assign y18_ptr = LibBlockOutputSignalAddr(17, "", "", 0)
        %assign y18BUS_ptr = LibBlockPWork("", "", "", 16)
        %assign y19_ptr = LibBlockOutputSignalAddr(18, "", "", 0)
        %assign y19BUS_ptr = LibBlockPWork("", "", "", 17)
        %assign y20_ptr = LibBlockOutputSignalAddr(19, "", "", 0)
        %assign y20BUS_ptr = LibBlockPWork("", "", "", 18)
        %assign y21_ptr = LibBlockOutputSignalAddr(20, "", "", 0)
        %assign y21BUS_ptr = LibBlockPWork("", "", "", 19)
        %assign y22_ptr = LibBlockOutputSignalAddr(21, "", "", 0)
        %assign y22BUS_ptr = LibBlockPWork("", "", "", 20)
        %assign y23_ptr = LibBlockOutputSignalAddr(22, "", "", 0)
        %assign y23BUS_ptr = LibBlockPWork("", "", "", 21)
        %assign y24_ptr = LibBlockOutputSignalAddr(23, "", "", 0)
        %assign y24BUS_ptr = LibBlockPWork("", "", "", 22)
        %% 
        /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
        sfun_Fusion_road_wrapper_Output(%<u1_ptr>, %<u1BUS_ptr>, %<u2_ptr>, %<u2BUS_ptr>, %<u3_ptr>, %<u4_ptr>, %<u4BUS_ptr>, %<u5_ptr>, %<u5BUS_ptr>, %<u6_ptr>, %<u6BUS_ptr>, %<u7_ptr>, %<u7BUS_ptr>, %<u8_ptr>, %<u8BUS_ptr>, %<u9_ptr>, %<u9BUS_ptr>, %<u10_ptr>, %<u10BUS_ptr>, %<u11_ptr>, %<u11BUS_ptr>, %<u12_ptr>, %<u12BUS_ptr>, %<u13_ptr>, %<u13BUS_ptr>, %<u14_ptr>, %<u14BUS_ptr>, %<u15_ptr>, %<u16_ptr>, %<u17_ptr>, %<u18_ptr>, %<u19_ptr>, %<u20_ptr>, %<u21_ptr>, %<u22_ptr>, %<u23_ptr>, %<u24_ptr>, %<u25_ptr>, %<u26_ptr>, %<u26BUS_ptr>, %<u27_ptr>, %<u27BUS_ptr>, %<u28_ptr>, %<y1_ptr>, %<y1BUS_ptr>, %<y2_ptr>, %<y2BUS_ptr>, %<y3_ptr>, %<y4_ptr>, %<y4BUS_ptr>, %<y5_ptr>, %<y5BUS_ptr>, %<y6_ptr>, %<y6BUS_ptr>, %<y7_ptr>, %<y7BUS_ptr>, %<y8_ptr>, %<y8BUS_ptr>, %<y9_ptr>, %<y9BUS_ptr>, %<y10_ptr>, %<y10BUS_ptr>, %<y11_ptr>, %<y11BUS_ptr>, %<y12_ptr>, %<y12BUS_ptr>, %<y13_ptr>, %<y13BUS_ptr>, %<y14_ptr>, %<y14BUS_ptr>, %<y15_ptr>, %<y15BUS_ptr>, %<y16_ptr>, %<y16BUS_ptr>, %<y17_ptr>, %<y17BUS_ptr>, %<y18_ptr>, %<y18BUS_ptr>, %<y19_ptr>, %<y19BUS_ptr>, %<y20_ptr>, %<y20BUS_ptr>, %<y21_ptr>, %<y21BUS_ptr>, %<y22_ptr>, %<y22BUS_ptr>, %<y23_ptr>, %<y23BUS_ptr>, %<y24_ptr>, %<y24BUS_ptr>);
    %else
        %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
        %assign u2_ptr = LibBlockInputSignalAddr(1, "", "", 0)
        %assign u3_ptr = LibBlockInputSignalAddr(2, "", "", 0)
        %assign u4_ptr = LibBlockInputSignalAddr(3, "", "", 0)
        %assign u5_ptr = LibBlockInputSignalAddr(4, "", "", 0)
        %assign u6_ptr = LibBlockInputSignalAddr(5, "", "", 0)
        %assign u7_ptr = LibBlockInputSignalAddr(6, "", "", 0)
        %assign u8_ptr = LibBlockInputSignalAddr(7, "", "", 0)
        %assign u9_ptr = LibBlockInputSignalAddr(8, "", "", 0)
        %assign u10_ptr = LibBlockInputSignalAddr(9, "", "", 0)
        %assign u11_ptr = LibBlockInputSignalAddr(10, "", "", 0)
        %assign u12_ptr = LibBlockInputSignalAddr(11, "", "", 0)
        %assign u13_ptr = LibBlockInputSignalAddr(12, "", "", 0)
        %assign u14_ptr = LibBlockInputSignalAddr(13, "", "", 0)
        %assign u15_ptr = LibBlockInputSignalAddr(14, "", "", 0)
        %assign u16_ptr = LibBlockInputSignalAddr(15, "", "", 0)
        %assign u17_ptr = LibBlockInputSignalAddr(16, "", "", 0)
        %assign u18_ptr = LibBlockInputSignalAddr(17, "", "", 0)
        %assign u19_ptr = LibBlockInputSignalAddr(18, "", "", 0)
        %assign u20_ptr = LibBlockInputSignalAddr(19, "", "", 0)
        %assign u21_ptr = LibBlockInputSignalAddr(20, "", "", 0)
        %assign u22_ptr = LibBlockInputSignalAddr(21, "", "", 0)
        %assign u23_ptr = LibBlockInputSignalAddr(22, "", "", 0)
        %assign u24_ptr = LibBlockInputSignalAddr(23, "", "", 0)
        %assign u25_ptr = LibBlockInputSignalAddr(24, "", "", 0)
        %assign u26_ptr = LibBlockInputSignalAddr(25, "", "", 0)
        %assign u27_ptr = LibBlockInputSignalAddr(26, "", "", 0)
        %assign u28_ptr = LibBlockInputSignalAddr(27, "", "", 0)
        %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
        %assign y2_ptr = LibBlockOutputSignalAddr(1, "", "", 0)
        %assign y3_ptr = LibBlockOutputSignalAddr(2, "", "", 0)
        %assign y4_ptr = LibBlockOutputSignalAddr(3, "", "", 0)
        %assign y5_ptr = LibBlockOutputSignalAddr(4, "", "", 0)
        %assign y6_ptr = LibBlockOutputSignalAddr(5, "", "", 0)
        %assign y7_ptr = LibBlockOutputSignalAddr(6, "", "", 0)
        %assign y8_ptr = LibBlockOutputSignalAddr(7, "", "", 0)
        %assign y9_ptr = LibBlockOutputSignalAddr(8, "", "", 0)
        %assign y10_ptr = LibBlockOutputSignalAddr(9, "", "", 0)
        %assign y11_ptr = LibBlockOutputSignalAddr(10, "", "", 0)
        %assign y12_ptr = LibBlockOutputSignalAddr(11, "", "", 0)
        %assign y13_ptr = LibBlockOutputSignalAddr(12, "", "", 0)
        %assign y14_ptr = LibBlockOutputSignalAddr(13, "", "", 0)
        %assign y15_ptr = LibBlockOutputSignalAddr(14, "", "", 0)
        %assign y16_ptr = LibBlockOutputSignalAddr(15, "", "", 0)
        %assign y17_ptr = LibBlockOutputSignalAddr(16, "", "", 0)
        %assign y18_ptr = LibBlockOutputSignalAddr(17, "", "", 0)
        %assign y19_ptr = LibBlockOutputSignalAddr(18, "", "", 0)
        %assign y20_ptr = LibBlockOutputSignalAddr(19, "", "", 0)
        %assign y21_ptr = LibBlockOutputSignalAddr(20, "", "", 0)
        %assign y22_ptr = LibBlockOutputSignalAddr(21, "", "", 0)
        %assign y23_ptr = LibBlockOutputSignalAddr(22, "", "", 0)
        %assign y24_ptr = LibBlockOutputSignalAddr(23, "", "", 0)
        %% 
        Fusion_Road_Main((EHRV2_ROAD_ATTR_INFO_BUS*)%<u1_ptr>, (EHRV2_CTRL_INFO_BUS*)%<u2_ptr>, (uint8_T*)%<u3_ptr>, (MRR_HDR_BUS*)%<u4_ptr>, (MRR_OBJ_BUS*)%<u5_ptr>, (EQ4_FSPX_BUS*)%<u6_ptr>, (EQ4_LA_BUS*)%<u7_ptr>, (EQ4_LAP_BUS*)%<u8_ptr>, (EQ4_LH_BUS*)%<u9_ptr>, (EQ4_LRE_BUS*)%<u10_ptr>, (EQ4_TFL_SPOTS_BUS*)%<u11_ptr>, (EQ4_TFL_STRUCT_BUS*)%<u12_ptr>, (EQ4_TSR_BUS*)%<u13_ptr>, (EQ4_FS_BUS*)%<u14_ptr>, (real32_T*)%<u15_ptr>, (real32_T*)%<u16_ptr>, (real32_T*)%<u17_ptr>, (real32_T*)%<u18_ptr>, (real32_T*)%<u19_ptr>, (real32_T*)%<u20_ptr>, (real32_T*)%<u21_ptr>, (real32_T*)%<u22_ptr>, (real32_T*)%<u23_ptr>, (real32_T*)%<u24_ptr>, (uint32_T*)%<u25_ptr>, (StbM_TimeStampExtendedType*)%<u26_ptr>, (StbM_UserDataType*)%<u27_ptr>, (uint8_T*)%<u28_ptr>, %<y1_ptr>, %<y2_ptr>, %<y3_ptr>, %<y4_ptr>, %<y5_ptr>, %<y6_ptr>, %<y7_ptr>, %<y8_ptr>, %<y9_ptr>, %<y10_ptr>, %<y11_ptr>, %<y12_ptr>, %<y13_ptr>, %<y14_ptr>, %<y15_ptr>, %<y16_ptr>, %<y17_ptr>, %<y18_ptr>, %<y19_ptr>, %<y20_ptr>, %<y21_ptr>, %<y22_ptr>, %<y23_ptr>, %<y24_ptr>);
    %endif
%endfunction

%% Function: Terminate ====================================================
%function Terminate (block, system) Output
    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
        %assign y1BUSBUS_addr = "&" + LibBlockPWork("", "", "", 0)
        %assign y2BUSBUS_addr = "&" + LibBlockPWork("", "", "", 1)
        %assign y4BUSBUS_addr = "&" + LibBlockPWork("", "", "", 2)
        %assign y5BUSBUS_addr = "&" + LibBlockPWork("", "", "", 3)
        %assign y6BUSBUS_addr = "&" + LibBlockPWork("", "", "", 4)
        %assign y7BUSBUS_addr = "&" + LibBlockPWork("", "", "", 5)
        %assign y8BUSBUS_addr = "&" + LibBlockPWork("", "", "", 6)
        %assign y9BUSBUS_addr = "&" + LibBlockPWork("", "", "", 7)
        %assign y10BUSBUS_addr = "&" + LibBlockPWork("", "", "", 8)
        %assign y11BUSBUS_addr = "&" + LibBlockPWork("", "", "", 9)
        %assign y12BUSBUS_addr = "&" + LibBlockPWork("", "", "", 10)
        %assign y13BUSBUS_addr = "&" + LibBlockPWork("", "", "", 11)
        %assign y14BUSBUS_addr = "&" + LibBlockPWork("", "", "", 12)
        %assign y15BUSBUS_addr = "&" + LibBlockPWork("", "", "", 13)
        %assign y16BUSBUS_addr = "&" + LibBlockPWork("", "", "", 14)
        %assign y17BUSBUS_addr = "&" + LibBlockPWork("", "", "", 15)
        %assign y18BUSBUS_addr = "&" + LibBlockPWork("", "", "", 16)
        %assign y19BUSBUS_addr = "&" + LibBlockPWork("", "", "", 17)
        %assign y20BUSBUS_addr = "&" + LibBlockPWork("", "", "", 18)
        %assign y21BUSBUS_addr = "&" + LibBlockPWork("", "", "", 19)
        %assign y22BUSBUS_addr = "&" + LibBlockPWork("", "", "", 20)
        %assign y23BUSBUS_addr = "&" + LibBlockPWork("", "", "", 21)
        %assign y24BUSBUS_addr = "&" + LibBlockPWork("", "", "", 22)
        %assign u1BUSBUS_addr = "&" + LibBlockPWork("", "", "", 23)
        %assign u2BUSBUS_addr = "&" + LibBlockPWork("", "", "", 24)
        %assign u4BUSBUS_addr = "&" + LibBlockPWork("", "", "", 25)
        %assign u5BUSBUS_addr = "&" + LibBlockPWork("", "", "", 26)
        %assign u6BUSBUS_addr = "&" + LibBlockPWork("", "", "", 27)
        %assign u7BUSBUS_addr = "&" + LibBlockPWork("", "", "", 28)
        %assign u8BUSBUS_addr = "&" + LibBlockPWork("", "", "", 29)
        %assign u9BUSBUS_addr = "&" + LibBlockPWork("", "", "", 30)
        %assign u10BUSBUS_addr = "&" + LibBlockPWork("", "", "", 31)
        %assign u11BUSBUS_addr = "&" + LibBlockPWork("", "", "", 32)
        %assign u12BUSBUS_addr = "&" + LibBlockPWork("", "", "", 33)
        %assign u13BUSBUS_addr = "&" + LibBlockPWork("", "", "", 34)
        %assign u14BUSBUS_addr = "&" + LibBlockPWork("", "", "", 35)
        %assign u26BUSBUS_addr = "&" + LibBlockPWork("", "", "", 36)
        %assign u27BUSBUS_addr = "&" + LibBlockPWork("", "", "", 37)
        %assign blockPath = STRING(LibGetBlockPath(block))
        if (sfun_Fusion_road_wrapper_freemem(%<y1BUSBUS_addr>, %<y2BUSBUS_addr>, %<y4BUSBUS_addr>, %<y5BUSBUS_addr>, %<y6BUSBUS_addr>, %<y7BUSBUS_addr>, %<y8BUSBUS_addr>, %<y9BUSBUS_addr>, %<y10BUSBUS_addr>, %<y11BUSBUS_addr>, %<y12BUSBUS_addr>, %<y13BUSBUS_addr>, %<y14BUSBUS_addr>, %<y15BUSBUS_addr>, %<y16BUSBUS_addr>, %<y17BUSBUS_addr>, %<y18BUSBUS_addr>, %<y19BUSBUS_addr>, %<y20BUSBUS_addr>, %<y21BUSBUS_addr>, %<y22BUSBUS_addr>, %<y23BUSBUS_addr>, %<y24BUSBUS_addr>, %<u1BUSBUS_addr>, %<u2BUSBUS_addr>, %<u4BUSBUS_addr>, %<u5BUSBUS_addr>, %<u6BUSBUS_addr>, %<u7BUSBUS_addr>, %<u8BUSBUS_addr>, %<u9BUSBUS_addr>, %<u10BUSBUS_addr>, %<u11BUSBUS_addr>, %<u12BUSBUS_addr>, %<u13BUSBUS_addr>, %<u14BUSBUS_addr>, %<u26BUSBUS_addr>, %<u27BUSBUS_addr>)!=0) %<LibSetRTModelErrorStatus("\"Memory free failure for %<blockPath>\"")>;
    %else
    %endif
%endfunction

%% [EOF]
