%% file : ofm_v305_1110.tlc
%% 
%% Description:
%%   Simulink Coder TLC Code Generation file for ofm_v305_1110
%% 
%% Simulink version      : 10.2 (R2020b) 29-Jul-2020
%% TLC file generated on : 10-Dec-2020 16:52:42

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'ofm_v305_1110';
     def.OutputFcnSpec = 'void object_fusion_main(RFM_LINE_BUS u1[1],RFM_LINE_BUS u2[1],RFM_LINE_BUS u3[1],RFM_LINE_BUS u4[1],RFM_LINE_BUS u5[1],RFM_LINE_BUS u6[1],RFM_LINE_BUS u7[1],RFM_LINE_BUS u8[1],RFM_LINE_BUS u9[1],RFM_LINE_BUS u10[1],RFM_LINE_BUS u11[1],RFM_LINE_BUS u12[1],MRR_HDR_BUS u13[1],MRR_OBJ_BUS u14[32],CR_HDR_BUS u15[1],CR_OBJ_BUS u16[6],CR_HDR_BUS u17[1],CR_OBJ_BUS u18[6],RSDS_HDR_BUS u19[1],RSDS_OBJ_BUS u20[6],RSDS_HDR_BUS u21[1],RSDS_OBJ_BUS u22[6], EQ4_OBJ_BUS u23[1],EQ4_FS_BUS u24[1],uint32 u25[1],single u26[1],single u27[1],single u28[1],single u29[1],single u30[1],single u31[1],single u32[1],single u33[1],single u34[1],single u35[1],uint32 y1[1],OFM_OBJ_BUS y2[1])';
     def.StartFcnSpec = 'void object_fusion_init()';
     def.HeaderFiles = {'Fusion_autobox.h'};
     def.SourceFiles = {'hungrain_match.c', 'munkres_optimizer.c', 'matrix_operation.c', 'DTC.c', 'object.c', 'fusion_config.c', 'object_container.c', 'vehicle_info_container.c', 'assignment.c', 'cal_cost.c', 'ego_motion.c', 'fusion_matcher.c', 'mal_dist.c', 'match_score.c', 'fusion_track.c', 'fusion_track_filter.c', 'fusion_track_logger.c', 'vehicle_dynamic.c', 'obstacle_fusion.c', 'fusion_api.c', 'Object_Api.c', 'camera.c', 'camera_EQ4.c', 'radar_CR.c', 'radar_MRR.c', 'radar_RSDS.c', 'radar.c', 'track.c', 'embedded_perf.c', 'fusion_track_output.c', 'Fusion_autobox.c'};
     def.IncPaths = {'.\fusion', '.\fusion\track', '.\fusion\common\algorithm\match', '.\fusion\common\log', '.\fusion\common\math\matrix', '.\fusion\common\math\geometry', '.\fusion\common\performance', '.\fusion\common\type', '.\fusion\object', '.\fusion\sensors', '.\fusion\sensors\camera', '.\fusion\sensors\lidar', '.\fusion\sensors\radar', '.\fusion\sensors\radar\CR', '.\fusion\sensors\radar\MRR', '.\fusion\sensors\radar\RSDS', '.\fusion\DTC', '.\fusion\include', '.\fusion\obstacle', '.\fusion\obstacle\config', '.\fusion\obstacle\container', '.\fusion\obstacle\matcher', '.\fusion\obstacle\vehicle', '.\fusion\obstacle\fusion_track', '.\fusion\embedded_perf', '.\hwa_autobox_adapter'};
     def.SrcPaths = {'.\fusion', '.\fusion\track', '.\fusion\common\algorithm\match', '.\fusion\common\log', '.\fusion\common\math\matrix', '.\fusion\common\math\geometry', '.\fusion\common\performance', '.\fusion\common\type', '.\fusion\object', '.\fusion\sensors', '.\fusion\sensors\camera', '.\fusion\sensors\lidar', '.\fusion\sensors\radar', '.\fusion\sensors\radar\CR', '.\fusion\sensors\radar\MRR', '.\fusion\sensors\radar\RSDS', '.\fusion\DTC', '.\fusion\include', '.\fusion\obstacle', '.\fusion\obstacle\config', '.\fusion\obstacle\container', '.\fusion\obstacle\matcher', '.\fusion\obstacle\vehicle', '.\fusion\obstacle\fusion_track', '.\fusion\embedded_perf', '.\hwa_autobox_adapter'};
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
%/

%implements ofm_v305_1110 "C"

%% Function: FcnGenerateUniqueFileName ====================================
%function FcnGenerateUniqueFileName (filename, type) void
    %assign isReserved = TLC_FALSE
    %foreach idxFile = CompiledModel.DataObjectUsage.NumFiles[0]
        %assign thisFile = CompiledModel.DataObjectUsage.File[idxFile]
        %if (thisFile.Name==filename) && (thisFile.Type==type)
            %assign isReserved = TLC_TRUE
            %break
        %endif
    %endforeach
    %if (isReserved==TLC_TRUE)
        %assign filename = FcnGenerateUniqueFileName(filename + "_", type)
    %endif
    %return filename
%endfunction

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup (block, system) void

    %% The Target Language must be C
    %if ::GenCPP==1 && !IsModelReferenceSimTarget()
        %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
    %endif

    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
        %assign hFileName = FcnGenerateUniqueFileName("ofm_v305_1110_wrapper", "header")
        %assign hFileNameMacro = FEVAL("upper", hFileName)
        %openfile hFile = "%<hFileName>.h"
        %selectfile hFile
        #ifndef _%<hFileNameMacro>_H_
        #define _%<hFileNameMacro>_H_
        
        #ifdef MATLAB_MEX_FILE
        #include "tmwtypes.h"
        #else
        #include "rtwtypes.h"
        #endif
        
        extern int ofm_v305_1110_wrapper_allocmem(void** y2BUS, int_T y2BUSWidth, void** u1BUS, int_T u1BUSWidth, void** u2BUS, int_T u2BUSWidth, void** u3BUS, int_T u3BUSWidth, void** u4BUS, int_T u4BUSWidth, void** u5BUS, int_T u5BUSWidth, void** u6BUS, int_T u6BUSWidth, void** u7BUS, int_T u7BUSWidth, void** u8BUS, int_T u8BUSWidth, void** u9BUS, int_T u9BUSWidth, void** u10BUS, int_T u10BUSWidth, void** u11BUS, int_T u11BUSWidth, void** u12BUS, int_T u12BUSWidth, void** u13BUS, int_T u13BUSWidth, void** u14BUS, int_T u14BUSWidth, void** u15BUS, int_T u15BUSWidth, void** u16BUS, int_T u16BUSWidth, void** u17BUS, int_T u17BUSWidth, void** u18BUS, int_T u18BUSWidth, void** u19BUS, int_T u19BUSWidth, void** u20BUS, int_T u20BUSWidth, void** u21BUS, int_T u21BUSWidth, void** u22BUS, int_T u22BUSWidth, void** u23BUS, int_T u23BUSWidth, void** u24BUS, int_T u24BUSWidth);
        extern int ofm_v305_1110_wrapper_freemem(void** y2BUS, void** u1BUS, void** u2BUS, void** u3BUS, void** u4BUS, void** u5BUS, void** u6BUS, void** u7BUS, void** u8BUS, void** u9BUS, void** u10BUS, void** u11BUS, void** u12BUS, void** u13BUS, void** u14BUS, void** u15BUS, void** u16BUS, void** u17BUS, void** u18BUS, void** u19BUS, void** u20BUS, void** u21BUS, void** u22BUS, void** u23BUS, void** u24BUS);

        extern void ofm_v305_1110_wrapper_Start(void);
        extern void ofm_v305_1110_wrapper_Output(const void* u1, void* u1BUS, const void* u2, void* u2BUS, const void* u3, void* u3BUS, const void* u4, void* u4BUS, const void* u5, void* u5BUS, const void* u6, void* u6BUS, const void* u7, void* u7BUS, const void* u8, void* u8BUS, const void* u9, void* u9BUS, const void* u10, void* u10BUS, const void* u11, void* u11BUS, const void* u12, void* u12BUS, const void* u13, void* u13BUS, const void* u14, void* u14BUS, const void* u15, void* u15BUS, const void* u16, void* u16BUS, const void* u17, void* u17BUS, const void* u18, void* u18BUS, const void* u19, void* u19BUS, const void* u20, void* u20BUS, const void* u21, void* u21BUS, const void* u22, void* u22BUS, const void* u23, void* u23BUS, const void* u24, void* u24BUS, const uint32_T* u25, const real32_T* u26, const real32_T* u27, const real32_T* u28, const real32_T* u29, const real32_T* u30, const real32_T* u31, const real32_T* u32, const real32_T* u33, const real32_T* u34, const real32_T* u35,  uint32_T* y1,  void* y2, void* y2BUS);
        
        #endif
        
        %closefile hFile
        
        %assign cFileName = FcnGenerateUniqueFileName("ofm_v305_1110_wrapper", "source")
        %openfile cFile = "%<cFileName>.c"
        %selectfile cFile
        #include <stdlib.h>
        #include <string.h>
        #ifdef MATLAB_MEX_FILE
        #include "tmwtypes.h"
        #else
        #include "rtwtypes.h"
        #endif

        #include "Fusion_autobox.h"

        #include "PubIfFusionOFM_MDL_types.h"

        int ofm_v305_1110_wrapper_allocmem(void** y2BUS, int_T y2BUSWidth, void** u1BUS, int_T u1BUSWidth, void** u2BUS, int_T u2BUSWidth, void** u3BUS, int_T u3BUSWidth, void** u4BUS, int_T u4BUSWidth, void** u5BUS, int_T u5BUSWidth, void** u6BUS, int_T u6BUSWidth, void** u7BUS, int_T u7BUSWidth, void** u8BUS, int_T u8BUSWidth, void** u9BUS, int_T u9BUSWidth, void** u10BUS, int_T u10BUSWidth, void** u11BUS, int_T u11BUSWidth, void** u12BUS, int_T u12BUSWidth, void** u13BUS, int_T u13BUSWidth, void** u14BUS, int_T u14BUSWidth, void** u15BUS, int_T u15BUSWidth, void** u16BUS, int_T u16BUSWidth, void** u17BUS, int_T u17BUSWidth, void** u18BUS, int_T u18BUSWidth, void** u19BUS, int_T u19BUSWidth, void** u20BUS, int_T u20BUSWidth, void** u21BUS, int_T u21BUSWidth, void** u22BUS, int_T u22BUSWidth, void** u23BUS, int_T u23BUSWidth, void** u24BUS, int_T u24BUSWidth) {
            *y2BUS = calloc(sizeof(OFM_OBJ_BUS), y2BUSWidth);
            if (*y2BUS==NULL) return -1;
            *u1BUS = calloc(sizeof(RFM_LINE_BUS), u1BUSWidth);
            if (*u1BUS==NULL) return -1;
            *u2BUS = calloc(sizeof(RFM_LINE_BUS), u2BUSWidth);
            if (*u2BUS==NULL) return -1;
            *u3BUS = calloc(sizeof(RFM_LINE_BUS), u3BUSWidth);
            if (*u3BUS==NULL) return -1;
            *u4BUS = calloc(sizeof(RFM_LINE_BUS), u4BUSWidth);
            if (*u4BUS==NULL) return -1;
            *u5BUS = calloc(sizeof(RFM_LINE_BUS), u5BUSWidth);
            if (*u5BUS==NULL) return -1;
            *u6BUS = calloc(sizeof(RFM_LINE_BUS), u6BUSWidth);
            if (*u6BUS==NULL) return -1;
            *u7BUS = calloc(sizeof(RFM_LINE_BUS), u7BUSWidth);
            if (*u7BUS==NULL) return -1;
            *u8BUS = calloc(sizeof(RFM_LINE_BUS), u8BUSWidth);
            if (*u8BUS==NULL) return -1;
            *u9BUS = calloc(sizeof(RFM_LINE_BUS), u9BUSWidth);
            if (*u9BUS==NULL) return -1;
            *u10BUS = calloc(sizeof(RFM_LINE_BUS), u10BUSWidth);
            if (*u10BUS==NULL) return -1;
            *u11BUS = calloc(sizeof(RFM_LINE_BUS), u11BUSWidth);
            if (*u11BUS==NULL) return -1;
            *u12BUS = calloc(sizeof(RFM_LINE_BUS), u12BUSWidth);
            if (*u12BUS==NULL) return -1;
            *u13BUS = calloc(sizeof(MRR_HDR_BUS), u13BUSWidth);
            if (*u13BUS==NULL) return -1;
            *u14BUS = calloc(sizeof(MRR_OBJ_BUS), u14BUSWidth);
            if (*u14BUS==NULL) return -1;
            *u15BUS = calloc(sizeof(CR_HDR_BUS), u15BUSWidth);
            if (*u15BUS==NULL) return -1;
            *u16BUS = calloc(sizeof(CR_OBJ_BUS), u16BUSWidth);
            if (*u16BUS==NULL) return -1;
            *u17BUS = calloc(sizeof(CR_HDR_BUS), u17BUSWidth);
            if (*u17BUS==NULL) return -1;
            *u18BUS = calloc(sizeof(CR_OBJ_BUS), u18BUSWidth);
            if (*u18BUS==NULL) return -1;
            *u19BUS = calloc(sizeof(RSDS_HDR_BUS), u19BUSWidth);
            if (*u19BUS==NULL) return -1;
            *u20BUS = calloc(sizeof(RSDS_OBJ_BUS), u20BUSWidth);
            if (*u20BUS==NULL) return -1;
            *u21BUS = calloc(sizeof(RSDS_HDR_BUS), u21BUSWidth);
            if (*u21BUS==NULL) return -1;
            *u22BUS = calloc(sizeof(RSDS_OBJ_BUS), u22BUSWidth);
            if (*u22BUS==NULL) return -1;
            *u23BUS = calloc(sizeof(EQ4_OBJ_BUS), u23BUSWidth);
            if (*u23BUS==NULL) return -1;
            *u24BUS = calloc(sizeof(EQ4_FS_BUS), u24BUSWidth);
            if (*u24BUS==NULL) return -1;
            return 0;
        }
        
        int ofm_v305_1110_wrapper_freemem(void** y2BUS, void** u1BUS, void** u2BUS, void** u3BUS, void** u4BUS, void** u5BUS, void** u6BUS, void** u7BUS, void** u8BUS, void** u9BUS, void** u10BUS, void** u11BUS, void** u12BUS, void** u13BUS, void** u14BUS, void** u15BUS, void** u16BUS, void** u17BUS, void** u18BUS, void** u19BUS, void** u20BUS, void** u21BUS, void** u22BUS, void** u23BUS, void** u24BUS) {
            if (*y2BUS!=NULL) free(*y2BUS);
            *y2BUS = NULL;
            if (*u1BUS!=NULL) free(*u1BUS);
            *u1BUS = NULL;
            if (*u2BUS!=NULL) free(*u2BUS);
            *u2BUS = NULL;
            if (*u3BUS!=NULL) free(*u3BUS);
            *u3BUS = NULL;
            if (*u4BUS!=NULL) free(*u4BUS);
            *u4BUS = NULL;
            if (*u5BUS!=NULL) free(*u5BUS);
            *u5BUS = NULL;
            if (*u6BUS!=NULL) free(*u6BUS);
            *u6BUS = NULL;
            if (*u7BUS!=NULL) free(*u7BUS);
            *u7BUS = NULL;
            if (*u8BUS!=NULL) free(*u8BUS);
            *u8BUS = NULL;
            if (*u9BUS!=NULL) free(*u9BUS);
            *u9BUS = NULL;
            if (*u10BUS!=NULL) free(*u10BUS);
            *u10BUS = NULL;
            if (*u11BUS!=NULL) free(*u11BUS);
            *u11BUS = NULL;
            if (*u12BUS!=NULL) free(*u12BUS);
            *u12BUS = NULL;
            if (*u13BUS!=NULL) free(*u13BUS);
            *u13BUS = NULL;
            if (*u14BUS!=NULL) free(*u14BUS);
            *u14BUS = NULL;
            if (*u15BUS!=NULL) free(*u15BUS);
            *u15BUS = NULL;
            if (*u16BUS!=NULL) free(*u16BUS);
            *u16BUS = NULL;
            if (*u17BUS!=NULL) free(*u17BUS);
            *u17BUS = NULL;
            if (*u18BUS!=NULL) free(*u18BUS);
            *u18BUS = NULL;
            if (*u19BUS!=NULL) free(*u19BUS);
            *u19BUS = NULL;
            if (*u20BUS!=NULL) free(*u20BUS);
            *u20BUS = NULL;
            if (*u21BUS!=NULL) free(*u21BUS);
            *u21BUS = NULL;
            if (*u22BUS!=NULL) free(*u22BUS);
            *u22BUS = NULL;
            if (*u23BUS!=NULL) free(*u23BUS);
            *u23BUS = NULL;
            if (*u24BUS!=NULL) free(*u24BUS);
            *u24BUS = NULL;
            return 0;
        }

        void ofm_v305_1110_wrapper_Start(void) {
            object_fusion_init();
        }

        void ofm_v305_1110_wrapper_Output(const void* u1, void* u1BUS, const void* u2, void* u2BUS, const void* u3, void* u3BUS, const void* u4, void* u4BUS, const void* u5, void* u5BUS, const void* u6, void* u6BUS, const void* u7, void* u7BUS, const void* u8, void* u8BUS, const void* u9, void* u9BUS, const void* u10, void* u10BUS, const void* u11, void* u11BUS, const void* u12, void* u12BUS, const void* u13, void* u13BUS, const void* u14, void* u14BUS, const void* u15, void* u15BUS, const void* u16, void* u16BUS, const void* u17, void* u17BUS, const void* u18, void* u18BUS, const void* u19, void* u19BUS, const void* u20, void* u20BUS, const void* u21, void* u21BUS, const void* u22, void* u22BUS, const void* u23, void* u23BUS, const void* u24, void* u24BUS, const uint32_T* u25, const real32_T* u26, const real32_T* u27, const real32_T* u28, const real32_T* u29, const real32_T* u30, const real32_T* u31, const real32_T* u32, const real32_T* u33, const real32_T* u34, const real32_T* u35,  uint32_T* y1,  void* y2, void* y2BUS) {

            /* Assign the Simulink structure u1 to user structure u1BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(0)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u1BUS)", "(char *)u1", 0)>


            /* Assign the Simulink structure u2 to user structure u2BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(1)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u2BUS)", "(char *)u2", 0)>


            /* Assign the Simulink structure u3 to user structure u3BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(2)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u3BUS)", "(char *)u3", 0)>


            /* Assign the Simulink structure u4 to user structure u4BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(3)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u4BUS)", "(char *)u4", 0)>


            /* Assign the Simulink structure u5 to user structure u5BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(4)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u5BUS)", "(char *)u5", 0)>


            /* Assign the Simulink structure u6 to user structure u6BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(5)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u6BUS)", "(char *)u6", 0)>


            /* Assign the Simulink structure u7 to user structure u7BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(6)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u7BUS)", "(char *)u7", 0)>


            /* Assign the Simulink structure u8 to user structure u8BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(7)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u8BUS)", "(char *)u8", 0)>


            /* Assign the Simulink structure u9 to user structure u9BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(8)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u9BUS)", "(char *)u9", 0)>


            /* Assign the Simulink structure u10 to user structure u10BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(9)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u10BUS)", "(char *)u10", 0)>


            /* Assign the Simulink structure u11 to user structure u11BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(10)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u11BUS)", "(char *)u11", 0)>


            /* Assign the Simulink structure u12 to user structure u12BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(11)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RFM_LINE_BUS *)u12BUS)", "(char *)u12", 0)>


            /* Assign the Simulink structure u13 to user structure u13BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(12)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(MRR_HDR_BUS *)u13BUS)", "(char *)u13", 0)>


            /* Assign the Simulink structure u14 to user structure u14BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(13)
            %assign width = LibBlockInputSignalWidth(13)
            %assign optStar = ISEQUAL(width,1) ? "*" : ""
            %assign isCmplx = LibBlockInputSignalIsComplex(13)
            %<SLibAssignSLStructToUserStructND(dTypeId, width, "(%<optStar>(MRR_OBJ_BUS *)u14BUS)", "(char *)u14", Matrix(1,1) [0], 0, isCmplx)>

            /* Assign the Simulink structure u15 to user structure u15BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(14)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(CR_HDR_BUS *)u15BUS)", "(char *)u15", 0)>


            /* Assign the Simulink structure u16 to user structure u16BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(15)
            %assign width = LibBlockInputSignalWidth(15)
            %assign optStar = ISEQUAL(width,1) ? "*" : ""
            %assign isCmplx = LibBlockInputSignalIsComplex(15)
            %<SLibAssignSLStructToUserStructND(dTypeId, width, "(%<optStar>(CR_OBJ_BUS *)u16BUS)", "(char *)u16", Matrix(1,1) [0], 0, isCmplx)>

            /* Assign the Simulink structure u17 to user structure u17BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(16)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(CR_HDR_BUS *)u17BUS)", "(char *)u17", 0)>


            /* Assign the Simulink structure u18 to user structure u18BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(17)
            %assign width = LibBlockInputSignalWidth(17)
            %assign optStar = ISEQUAL(width,1) ? "*" : ""
            %assign isCmplx = LibBlockInputSignalIsComplex(17)
            %<SLibAssignSLStructToUserStructND(dTypeId, width, "(%<optStar>(CR_OBJ_BUS *)u18BUS)", "(char *)u18", Matrix(1,1) [0], 0, isCmplx)>

            /* Assign the Simulink structure u19 to user structure u19BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(18)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RSDS_HDR_BUS *)u19BUS)", "(char *)u19", 0)>


            /* Assign the Simulink structure u20 to user structure u20BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(19)
            %assign width = LibBlockInputSignalWidth(19)
            %assign optStar = ISEQUAL(width,1) ? "*" : ""
            %assign isCmplx = LibBlockInputSignalIsComplex(19)
            %<SLibAssignSLStructToUserStructND(dTypeId, width, "(%<optStar>(RSDS_OBJ_BUS *)u20BUS)", "(char *)u20", Matrix(1,1) [0], 0, isCmplx)>

            /* Assign the Simulink structure u21 to user structure u21BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(20)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(RSDS_HDR_BUS *)u21BUS)", "(char *)u21", 0)>


            /* Assign the Simulink structure u22 to user structure u22BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(21)
            %assign width = LibBlockInputSignalWidth(21)
            %assign optStar = ISEQUAL(width,1) ? "*" : ""
            %assign isCmplx = LibBlockInputSignalIsComplex(21)
            %<SLibAssignSLStructToUserStructND(dTypeId, width, "(%<optStar>(RSDS_OBJ_BUS *)u22BUS)", "(char *)u22", Matrix(1,1) [0], 0, isCmplx)>

            /* Assign the Simulink structure u23 to user structure u23BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(22)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EQ4_OBJ_BUS *)u23BUS)", "(char *)u23", 0)>


            /* Assign the Simulink structure u24 to user structure u24BUS */
            %assign dTypeId = LibBlockInputSignalDataTypeId(23)
            %<SLibAssignSLStructToUserStruct(dTypeId, "(*(EQ4_FS_BUS *)u24BUS)", "(char *)u24", 0)>

            object_fusion_main((RFM_LINE_BUS *) u1BUS, (RFM_LINE_BUS *) u2BUS, (RFM_LINE_BUS *) u3BUS, (RFM_LINE_BUS *) u4BUS, (RFM_LINE_BUS *) u5BUS, (RFM_LINE_BUS *) u6BUS, (RFM_LINE_BUS *) u7BUS, (RFM_LINE_BUS *) u8BUS, (RFM_LINE_BUS *) u9BUS, (RFM_LINE_BUS *) u10BUS, (RFM_LINE_BUS *) u11BUS, (RFM_LINE_BUS *) u12BUS, (MRR_HDR_BUS *) u13BUS, (MRR_OBJ_BUS *) u14BUS, (CR_HDR_BUS *) u15BUS, (CR_OBJ_BUS *) u16BUS, (CR_HDR_BUS *) u17BUS, (CR_OBJ_BUS *) u18BUS, (RSDS_HDR_BUS *) u19BUS, (RSDS_OBJ_BUS *) u20BUS, (RSDS_HDR_BUS *) u21BUS, (RSDS_OBJ_BUS *) u22BUS, (EQ4_OBJ_BUS *) u23BUS, (EQ4_FS_BUS *) u24BUS, (uint32_T*)(u25), (real32_T*)(u26), (real32_T*)(u27), (real32_T*)(u28), (real32_T*)(u29), (real32_T*)(u30), (real32_T*)(u31), (real32_T*)(u32), (real32_T*)(u33), (real32_T*)(u34), (real32_T*)(u35), y1, (OFM_OBJ_BUS *) y2BUS);

            /* Assign the user structure y2BUS to the Simulink structure y2 */
            %assign dTypeId = LibBlockOutputSignalDataTypeId(1)
            %<SLibAssignUserStructToSLStruct(dTypeId, "(char *)y2", "(*(OFM_OBJ_BUS *)y2BUS)", 0)>
        }

        %closefile cFile

        %<LibAddToCommonIncludes("%<hFileName>.h")>
        %<LibAddToModelSources("%<cFileName>")>
    %else
        %<LibAddToCommonIncludes("Fusion_autobox.h")>
        %<LibAddToCommonIncludes("PubIfFusionOFM_MDL_types.h")>
    %endif
    %<SLibAddToStaticSources("hungrain_match.c")>
    %<SLibAddToStaticSources("munkres_optimizer.c")>
    %<SLibAddToStaticSources("matrix_operation.c")>
    %<SLibAddToStaticSources("DTC.c")>
    %<SLibAddToStaticSources("object.c")>
    %<SLibAddToStaticSources("fusion_config.c")>
    %<SLibAddToStaticSources("object_container.c")>
    %<SLibAddToStaticSources("vehicle_info_container.c")>
    %<SLibAddToStaticSources("assignment.c")>
    %<SLibAddToStaticSources("cal_cost.c")>
    %<SLibAddToStaticSources("ego_motion.c")>
    %<SLibAddToStaticSources("fusion_matcher.c")>
    %<SLibAddToStaticSources("mal_dist.c")>
    %<SLibAddToStaticSources("match_score.c")>
    %<SLibAddToStaticSources("fusion_track.c")>
    %<SLibAddToStaticSources("fusion_track_filter.c")>
    %<SLibAddToStaticSources("fusion_track_logger.c")>
    %<SLibAddToStaticSources("vehicle_dynamic.c")>
    %<SLibAddToStaticSources("obstacle_fusion.c")>
    %<SLibAddToStaticSources("fusion_api.c")>
    %<SLibAddToStaticSources("Object_Api.c")>
    %<SLibAddToStaticSources("camera.c")>
    %<SLibAddToStaticSources("camera_EQ4.c")>
    %<SLibAddToStaticSources("radar_CR.c")>
    %<SLibAddToStaticSources("radar_MRR.c")>
    %<SLibAddToStaticSources("radar_RSDS.c")>
    %<SLibAddToStaticSources("radar.c")>
    %<SLibAddToStaticSources("track.c")>
    %<SLibAddToStaticSources("embedded_perf.c")>
    %<SLibAddToStaticSources("fusion_track_output.c")>
    %<SLibAddToStaticSources("Fusion_autobox.c")>
%endfunction

%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup (block, system) void
    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
    %else
        %<LibBlockSetIsExpressionCompliant(block)>
    %endif
%endfunction

%% Function: Start ========================================================
%function Start (block, system) Output
    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
        %assign y2BUS_addr = "&" + LibBlockPWork("", "", "", 0)
        %assign u1BUS_addr = "&" + LibBlockPWork("", "", "", 1)
        %assign u2BUS_addr = "&" + LibBlockPWork("", "", "", 2)
        %assign u3BUS_addr = "&" + LibBlockPWork("", "", "", 3)
        %assign u4BUS_addr = "&" + LibBlockPWork("", "", "", 4)
        %assign u5BUS_addr = "&" + LibBlockPWork("", "", "", 5)
        %assign u6BUS_addr = "&" + LibBlockPWork("", "", "", 6)
        %assign u7BUS_addr = "&" + LibBlockPWork("", "", "", 7)
        %assign u8BUS_addr = "&" + LibBlockPWork("", "", "", 8)
        %assign u9BUS_addr = "&" + LibBlockPWork("", "", "", 9)
        %assign u10BUS_addr = "&" + LibBlockPWork("", "", "", 10)
        %assign u11BUS_addr = "&" + LibBlockPWork("", "", "", 11)
        %assign u12BUS_addr = "&" + LibBlockPWork("", "", "", 12)
        %assign u13BUS_addr = "&" + LibBlockPWork("", "", "", 13)
        %assign u14BUS_addr = "&" + LibBlockPWork("", "", "", 14)
        %assign u15BUS_addr = "&" + LibBlockPWork("", "", "", 15)
        %assign u16BUS_addr = "&" + LibBlockPWork("", "", "", 16)
        %assign u17BUS_addr = "&" + LibBlockPWork("", "", "", 17)
        %assign u18BUS_addr = "&" + LibBlockPWork("", "", "", 18)
        %assign u19BUS_addr = "&" + LibBlockPWork("", "", "", 19)
        %assign u20BUS_addr = "&" + LibBlockPWork("", "", "", 20)
        %assign u21BUS_addr = "&" + LibBlockPWork("", "", "", 21)
        %assign u22BUS_addr = "&" + LibBlockPWork("", "", "", 22)
        %assign u23BUS_addr = "&" + LibBlockPWork("", "", "", 23)
        %assign u24BUS_addr = "&" + LibBlockPWork("", "", "", 24)
        %assign blockPath = STRING(LibGetBlockPath(block))
        if (ofm_v305_1110_wrapper_allocmem(%<y2BUS_addr>, %<LibBlockOutputSignalWidth(1)>, %<u1BUS_addr>, %<LibBlockInputSignalWidth(0)>, %<u2BUS_addr>, %<LibBlockInputSignalWidth(1)>, %<u3BUS_addr>, %<LibBlockInputSignalWidth(2)>, %<u4BUS_addr>, %<LibBlockInputSignalWidth(3)>, %<u5BUS_addr>, %<LibBlockInputSignalWidth(4)>, %<u6BUS_addr>, %<LibBlockInputSignalWidth(5)>, %<u7BUS_addr>, %<LibBlockInputSignalWidth(6)>, %<u8BUS_addr>, %<LibBlockInputSignalWidth(7)>, %<u9BUS_addr>, %<LibBlockInputSignalWidth(8)>, %<u10BUS_addr>, %<LibBlockInputSignalWidth(9)>, %<u11BUS_addr>, %<LibBlockInputSignalWidth(10)>, %<u12BUS_addr>, %<LibBlockInputSignalWidth(11)>, %<u13BUS_addr>, %<LibBlockInputSignalWidth(12)>, %<u14BUS_addr>, %<LibBlockInputSignalWidth(13)>, %<u15BUS_addr>, %<LibBlockInputSignalWidth(14)>, %<u16BUS_addr>, %<LibBlockInputSignalWidth(15)>, %<u17BUS_addr>, %<LibBlockInputSignalWidth(16)>, %<u18BUS_addr>, %<LibBlockInputSignalWidth(17)>, %<u19BUS_addr>, %<LibBlockInputSignalWidth(18)>, %<u20BUS_addr>, %<LibBlockInputSignalWidth(19)>, %<u21BUS_addr>, %<LibBlockInputSignalWidth(20)>, %<u22BUS_addr>, %<LibBlockInputSignalWidth(21)>, %<u23BUS_addr>, %<LibBlockInputSignalWidth(22)>, %<u24BUS_addr>, %<LibBlockInputSignalWidth(23)>)!=0) %<LibSetRTModelErrorStatus("\"Memory allocation failure for %<blockPath>\"")>;
        %% 
        /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
        ofm_v305_1110_wrapper_Start();
    %else
        %% 
        object_fusion_init();
    %endif
%endfunction

%% Function: Outputs ======================================================
%function Outputs (block, system) Output
    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
        %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
        %assign u1BUS_ptr = LibBlockPWork("", "", "", 1)
        %assign u2_ptr = LibBlockInputSignalAddr(1, "", "", 0)
        %assign u2BUS_ptr = LibBlockPWork("", "", "", 2)
        %assign u3_ptr = LibBlockInputSignalAddr(2, "", "", 0)
        %assign u3BUS_ptr = LibBlockPWork("", "", "", 3)
        %assign u4_ptr = LibBlockInputSignalAddr(3, "", "", 0)
        %assign u4BUS_ptr = LibBlockPWork("", "", "", 4)
        %assign u5_ptr = LibBlockInputSignalAddr(4, "", "", 0)
        %assign u5BUS_ptr = LibBlockPWork("", "", "", 5)
        %assign u6_ptr = LibBlockInputSignalAddr(5, "", "", 0)
        %assign u6BUS_ptr = LibBlockPWork("", "", "", 6)
        %assign u7_ptr = LibBlockInputSignalAddr(6, "", "", 0)
        %assign u7BUS_ptr = LibBlockPWork("", "", "", 7)
        %assign u8_ptr = LibBlockInputSignalAddr(7, "", "", 0)
        %assign u8BUS_ptr = LibBlockPWork("", "", "", 8)
        %assign u9_ptr = LibBlockInputSignalAddr(8, "", "", 0)
        %assign u9BUS_ptr = LibBlockPWork("", "", "", 9)
        %assign u10_ptr = LibBlockInputSignalAddr(9, "", "", 0)
        %assign u10BUS_ptr = LibBlockPWork("", "", "", 10)
        %assign u11_ptr = LibBlockInputSignalAddr(10, "", "", 0)
        %assign u11BUS_ptr = LibBlockPWork("", "", "", 11)
        %assign u12_ptr = LibBlockInputSignalAddr(11, "", "", 0)
        %assign u12BUS_ptr = LibBlockPWork("", "", "", 12)
        %assign u13_ptr = LibBlockInputSignalAddr(12, "", "", 0)
        %assign u13BUS_ptr = LibBlockPWork("", "", "", 13)
        %assign u14_ptr = LibBlockInputSignalAddr(13, "", "", 0)
        %assign u14BUS_ptr = LibBlockPWork("", "", "", 14)
        %assign u15_ptr = LibBlockInputSignalAddr(14, "", "", 0)
        %assign u15BUS_ptr = LibBlockPWork("", "", "", 15)
        %assign u16_ptr = LibBlockInputSignalAddr(15, "", "", 0)
        %assign u16BUS_ptr = LibBlockPWork("", "", "", 16)
        %assign u17_ptr = LibBlockInputSignalAddr(16, "", "", 0)
        %assign u17BUS_ptr = LibBlockPWork("", "", "", 17)
        %assign u18_ptr = LibBlockInputSignalAddr(17, "", "", 0)
        %assign u18BUS_ptr = LibBlockPWork("", "", "", 18)
        %assign u19_ptr = LibBlockInputSignalAddr(18, "", "", 0)
        %assign u19BUS_ptr = LibBlockPWork("", "", "", 19)
        %assign u20_ptr = LibBlockInputSignalAddr(19, "", "", 0)
        %assign u20BUS_ptr = LibBlockPWork("", "", "", 20)
        %assign u21_ptr = LibBlockInputSignalAddr(20, "", "", 0)
        %assign u21BUS_ptr = LibBlockPWork("", "", "", 21)
        %assign u22_ptr = LibBlockInputSignalAddr(21, "", "", 0)
        %assign u22BUS_ptr = LibBlockPWork("", "", "", 22)
        %assign u23_ptr = LibBlockInputSignalAddr(22, "", "", 0)
        %assign u23BUS_ptr = LibBlockPWork("", "", "", 23)
        %assign u24_ptr = LibBlockInputSignalAddr(23, "", "", 0)
        %assign u24BUS_ptr = LibBlockPWork("", "", "", 24)
        %assign u25_ptr = LibBlockInputSignalAddr(24, "", "", 0)
        %assign u26_ptr = LibBlockInputSignalAddr(25, "", "", 0)
        %assign u27_ptr = LibBlockInputSignalAddr(26, "", "", 0)
        %assign u28_ptr = LibBlockInputSignalAddr(27, "", "", 0)
        %assign u29_ptr = LibBlockInputSignalAddr(28, "", "", 0)
        %assign u30_ptr = LibBlockInputSignalAddr(29, "", "", 0)
        %assign u31_ptr = LibBlockInputSignalAddr(30, "", "", 0)
        %assign u32_ptr = LibBlockInputSignalAddr(31, "", "", 0)
        %assign u33_ptr = LibBlockInputSignalAddr(32, "", "", 0)
        %assign u34_ptr = LibBlockInputSignalAddr(33, "", "", 0)
        %assign u35_ptr = LibBlockInputSignalAddr(34, "", "", 0)
        %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
        %assign y2_ptr = LibBlockOutputSignalAddr(1, "", "", 0)
        %assign y2BUS_ptr = LibBlockPWork("", "", "", 0)
        %% 
        /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
        ofm_v305_1110_wrapper_Output(%<u1_ptr>, %<u1BUS_ptr>, %<u2_ptr>, %<u2BUS_ptr>, %<u3_ptr>, %<u3BUS_ptr>, %<u4_ptr>, %<u4BUS_ptr>, %<u5_ptr>, %<u5BUS_ptr>, %<u6_ptr>, %<u6BUS_ptr>, %<u7_ptr>, %<u7BUS_ptr>, %<u8_ptr>, %<u8BUS_ptr>, %<u9_ptr>, %<u9BUS_ptr>, %<u10_ptr>, %<u10BUS_ptr>, %<u11_ptr>, %<u11BUS_ptr>, %<u12_ptr>, %<u12BUS_ptr>, %<u13_ptr>, %<u13BUS_ptr>, %<u14_ptr>, %<u14BUS_ptr>, %<u15_ptr>, %<u15BUS_ptr>, %<u16_ptr>, %<u16BUS_ptr>, %<u17_ptr>, %<u17BUS_ptr>, %<u18_ptr>, %<u18BUS_ptr>, %<u19_ptr>, %<u19BUS_ptr>, %<u20_ptr>, %<u20BUS_ptr>, %<u21_ptr>, %<u21BUS_ptr>, %<u22_ptr>, %<u22BUS_ptr>, %<u23_ptr>, %<u23BUS_ptr>, %<u24_ptr>, %<u24BUS_ptr>, %<u25_ptr>, %<u26_ptr>, %<u27_ptr>, %<u28_ptr>, %<u29_ptr>, %<u30_ptr>, %<u31_ptr>, %<u32_ptr>, %<u33_ptr>, %<u34_ptr>, %<u35_ptr>, %<y1_ptr>, %<y2_ptr>, %<y2BUS_ptr>);
    %else
        %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
        %assign u2_ptr = LibBlockInputSignalAddr(1, "", "", 0)
        %assign u3_ptr = LibBlockInputSignalAddr(2, "", "", 0)
        %assign u4_ptr = LibBlockInputSignalAddr(3, "", "", 0)
        %assign u5_ptr = LibBlockInputSignalAddr(4, "", "", 0)
        %assign u6_ptr = LibBlockInputSignalAddr(5, "", "", 0)
        %assign u7_ptr = LibBlockInputSignalAddr(6, "", "", 0)
        %assign u8_ptr = LibBlockInputSignalAddr(7, "", "", 0)
        %assign u9_ptr = LibBlockInputSignalAddr(8, "", "", 0)
        %assign u10_ptr = LibBlockInputSignalAddr(9, "", "", 0)
        %assign u11_ptr = LibBlockInputSignalAddr(10, "", "", 0)
        %assign u12_ptr = LibBlockInputSignalAddr(11, "", "", 0)
        %assign u13_ptr = LibBlockInputSignalAddr(12, "", "", 0)
        %assign u14_ptr = LibBlockInputSignalAddr(13, "", "", 0)
        %assign u15_ptr = LibBlockInputSignalAddr(14, "", "", 0)
        %assign u16_ptr = LibBlockInputSignalAddr(15, "", "", 0)
        %assign u17_ptr = LibBlockInputSignalAddr(16, "", "", 0)
        %assign u18_ptr = LibBlockInputSignalAddr(17, "", "", 0)
        %assign u19_ptr = LibBlockInputSignalAddr(18, "", "", 0)
        %assign u20_ptr = LibBlockInputSignalAddr(19, "", "", 0)
        %assign u21_ptr = LibBlockInputSignalAddr(20, "", "", 0)
        %assign u22_ptr = LibBlockInputSignalAddr(21, "", "", 0)
        %assign u23_ptr = LibBlockInputSignalAddr(22, "", "", 0)
        %assign u24_ptr = LibBlockInputSignalAddr(23, "", "", 0)
        %assign u25_ptr = LibBlockInputSignalAddr(24, "", "", 0)
        %assign u26_ptr = LibBlockInputSignalAddr(25, "", "", 0)
        %assign u27_ptr = LibBlockInputSignalAddr(26, "", "", 0)
        %assign u28_ptr = LibBlockInputSignalAddr(27, "", "", 0)
        %assign u29_ptr = LibBlockInputSignalAddr(28, "", "", 0)
        %assign u30_ptr = LibBlockInputSignalAddr(29, "", "", 0)
        %assign u31_ptr = LibBlockInputSignalAddr(30, "", "", 0)
        %assign u32_ptr = LibBlockInputSignalAddr(31, "", "", 0)
        %assign u33_ptr = LibBlockInputSignalAddr(32, "", "", 0)
        %assign u34_ptr = LibBlockInputSignalAddr(33, "", "", 0)
        %assign u35_ptr = LibBlockInputSignalAddr(34, "", "", 0)
        %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
        %assign y2_ptr = LibBlockOutputSignalAddr(1, "", "", 0)
        %% 
        object_fusion_main((RFM_LINE_BUS*)%<u1_ptr>, (RFM_LINE_BUS*)%<u2_ptr>, (RFM_LINE_BUS*)%<u3_ptr>, (RFM_LINE_BUS*)%<u4_ptr>, (RFM_LINE_BUS*)%<u5_ptr>, (RFM_LINE_BUS*)%<u6_ptr>, (RFM_LINE_BUS*)%<u7_ptr>, (RFM_LINE_BUS*)%<u8_ptr>, (RFM_LINE_BUS*)%<u9_ptr>, (RFM_LINE_BUS*)%<u10_ptr>, (RFM_LINE_BUS*)%<u11_ptr>, (RFM_LINE_BUS*)%<u12_ptr>, (MRR_HDR_BUS*)%<u13_ptr>, (MRR_OBJ_BUS*)%<u14_ptr>, (CR_HDR_BUS*)%<u15_ptr>, (CR_OBJ_BUS*)%<u16_ptr>, (CR_HDR_BUS*)%<u17_ptr>, (CR_OBJ_BUS*)%<u18_ptr>, (RSDS_HDR_BUS*)%<u19_ptr>, (RSDS_OBJ_BUS*)%<u20_ptr>, (RSDS_HDR_BUS*)%<u21_ptr>, (RSDS_OBJ_BUS*)%<u22_ptr>, (EQ4_OBJ_BUS*)%<u23_ptr>, (EQ4_FS_BUS*)%<u24_ptr>, (uint32_T*)%<u25_ptr>, (real32_T*)%<u26_ptr>, (real32_T*)%<u27_ptr>, (real32_T*)%<u28_ptr>, (real32_T*)%<u29_ptr>, (real32_T*)%<u30_ptr>, (real32_T*)%<u31_ptr>, (real32_T*)%<u32_ptr>, (real32_T*)%<u33_ptr>, (real32_T*)%<u34_ptr>, (real32_T*)%<u35_ptr>, %<y1_ptr>, %<y2_ptr>);
    %endif
%endfunction

%% Function: Terminate ====================================================
%function Terminate (block, system) Output
    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
        %assign y2BUSBUS_addr = "&" + LibBlockPWork("", "", "", 0)
        %assign u1BUSBUS_addr = "&" + LibBlockPWork("", "", "", 1)
        %assign u2BUSBUS_addr = "&" + LibBlockPWork("", "", "", 2)
        %assign u3BUSBUS_addr = "&" + LibBlockPWork("", "", "", 3)
        %assign u4BUSBUS_addr = "&" + LibBlockPWork("", "", "", 4)
        %assign u5BUSBUS_addr = "&" + LibBlockPWork("", "", "", 5)
        %assign u6BUSBUS_addr = "&" + LibBlockPWork("", "", "", 6)
        %assign u7BUSBUS_addr = "&" + LibBlockPWork("", "", "", 7)
        %assign u8BUSBUS_addr = "&" + LibBlockPWork("", "", "", 8)
        %assign u9BUSBUS_addr = "&" + LibBlockPWork("", "", "", 9)
        %assign u10BUSBUS_addr = "&" + LibBlockPWork("", "", "", 10)
        %assign u11BUSBUS_addr = "&" + LibBlockPWork("", "", "", 11)
        %assign u12BUSBUS_addr = "&" + LibBlockPWork("", "", "", 12)
        %assign u13BUSBUS_addr = "&" + LibBlockPWork("", "", "", 13)
        %assign u14BUSBUS_addr = "&" + LibBlockPWork("", "", "", 14)
        %assign u15BUSBUS_addr = "&" + LibBlockPWork("", "", "", 15)
        %assign u16BUSBUS_addr = "&" + LibBlockPWork("", "", "", 16)
        %assign u17BUSBUS_addr = "&" + LibBlockPWork("", "", "", 17)
        %assign u18BUSBUS_addr = "&" + LibBlockPWork("", "", "", 18)
        %assign u19BUSBUS_addr = "&" + LibBlockPWork("", "", "", 19)
        %assign u20BUSBUS_addr = "&" + LibBlockPWork("", "", "", 20)
        %assign u21BUSBUS_addr = "&" + LibBlockPWork("", "", "", 21)
        %assign u22BUSBUS_addr = "&" + LibBlockPWork("", "", "", 22)
        %assign u23BUSBUS_addr = "&" + LibBlockPWork("", "", "", 23)
        %assign u24BUSBUS_addr = "&" + LibBlockPWork("", "", "", 24)
        %assign blockPath = STRING(LibGetBlockPath(block))
        if (ofm_v305_1110_wrapper_freemem(%<y2BUSBUS_addr>, %<u1BUSBUS_addr>, %<u2BUSBUS_addr>, %<u3BUSBUS_addr>, %<u4BUSBUS_addr>, %<u5BUSBUS_addr>, %<u6BUSBUS_addr>, %<u7BUSBUS_addr>, %<u8BUSBUS_addr>, %<u9BUSBUS_addr>, %<u10BUSBUS_addr>, %<u11BUSBUS_addr>, %<u12BUSBUS_addr>, %<u13BUSBUS_addr>, %<u14BUSBUS_addr>, %<u15BUSBUS_addr>, %<u16BUSBUS_addr>, %<u17BUSBUS_addr>, %<u18BUSBUS_addr>, %<u19BUSBUS_addr>, %<u20BUSBUS_addr>, %<u21BUSBUS_addr>, %<u22BUSBUS_addr>, %<u23BUSBUS_addr>, %<u24BUSBUS_addr>)!=0) %<LibSetRTModelErrorStatus("\"Memory free failure for %<blockPath>\"")>;
    %else
    %endif
%endfunction

%% [EOF]
