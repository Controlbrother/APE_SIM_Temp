/****************************************************************************\ 
 *** 
 *** File                  : dssimengine_accesspoint_CAN.cpp
 *** 
 *** Generated by dSPACE Tools.
 *** (c) Copyright 2013, dSPACE GmbH. All rights reserved.
\****************************************************************************/

#if !defined(DSSIMENGINE_ACCESSPOINT_CAN_CPP_)
#  define    DSSIMENGINE_ACCESSPOINT_CAN_CPP_


/* -- Include directives. -- */
#  include "dssimengine_api.h"
#  include "IOCode_Data.h"
#  include "dssimengine_accesspoint_CAN.h"

#  if defined(EXTERN_C_DECL)
#    undef EXTERN_C_DECL
#  endif
#  if defined(__cplusplus)
#    define EXTERN_C_DECL extern "C"
#  else
#    define EXTERN_C_DECL extern
#  endif


/* -- Definitions of exported functions. -- */

  void
ApSimEngineOnInitIoPreRtosInit_ctlcBODY_2_CANFD5_1_1(
    DsTErrorList ErrorList, DsCApplication* pApp) 
{
pCANFD5_1_1_DriverHandle = DsCImbsIoCan::create(ErrorList, pApp);
/* Support CAN channel access of implementation package code (e.g. RTICANMM, VECU) */
CANPluginChannelAddress_CANFD5minus1minus1 = CANBUSACCESS_5_CAN_CH;


pCANFD5_1_1_DriverHandle->bindIoChannel(ErrorList, DsCIoChannel::getInstance(ErrorList, CANBUSACCESS_5_CAN_CH),1 , 0); // Type (handshake), Role (slave)

}

  void
ApSimEngineOnInitIoPostRtosInit_ctlcBODY_0_CANFD5_1_1(
    DsTErrorList ErrorList) 
{
pCANFD5_1_1_DriverHandle->setName(ErrorList, "CANFD5-1-1");
/* CAN I/O function "CANFD5-1-1" */
{                                                                                                      
    DsTError Error = DSCAN_NO_ERROR;                                                                   
    if (((Error = DsCanBoard_create(&cANFD5_1_1_CAN_BoardHandle, CANBUSACCESS_5_CAN_CH)) != DSCAN_NO_ERROR)                                     
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error during board initialization.");       
    if (((Error = DsCanCh_create(&cANFD5_1_1_CAN_ChannelHandle, cANFD5_1_1_CAN_BoardHandle, CANBUSACCESS_5_CAN_CH)) != DSCAN_NO_ERROR)                                   
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error during channel initialization.");
DsCanCh_setFeature(cANFD5_1_1_CAN_ChannelHandle, DSCAN_CH_FEATURE_SIMTIMECONV_OFF);

if (((Error = DsCanCh_register(&cANFD5_1_1_CAN_ChannelHandle, cANFD5_1_1_CAN_BoardHandle, CANBUSACCESS_5_CAN_CH, "IoFunction")) != DSCAN_NO_ERROR))
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error during channel registration.");

if ((Error = DsCanCh_setDescriptor(cANFD5_1_1_CAN_ChannelHandle, "CAN_Channel__5_")) != DSCAN_NO_ERROR)                               
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                                     "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel descriptor.");       
                                                                                                                  
if ((Error = DsCanCh_setBaudRate(cANFD5_1_1_CAN_ChannelHandle, 500000)) != DSCAN_NO_ERROR)                                     
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel baudrate.");       
                                                                                                  
if (((Error = DsCanCh_setSamplePoint(cANFD5_1_1_CAN_ChannelHandle, 0.8)) != DSCAN_NO_ERROR)                                 
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_SAMPLEPOINT))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel sample point.");       
                                                                                                  
if (((Error = DsCanCh_setTermination(cANFD5_1_1_CAN_ChannelHandle, DSCAN_CH_TERMINATION_NONE)) != DSCAN_NO_ERROR)                                  
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_TERMINATION))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel termination.");       
                                                                                                  
if ((Error = DsCanCh_setTransceiver(cANFD5_1_1_CAN_ChannelHandle, DSCAN_CH_TRANSCEIVER_CAN_ISO11898_2)) != DSCAN_NO_ERROR)                                  
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel transceiver.");       
                                                                                                  
if ((Error = DsCanCh_setReceiveMode(cANFD5_1_1_CAN_ChannelHandle, DSCAN_CH_RECEIVE_MODE_NORMAL)) != DSCAN_NO_ERROR)         
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting receive mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusOffRecoveryMode(cANFD5_1_1_CAN_ChannelHandle, DSCAN_CH_BUSOFF_RECOVERY_ENABLED)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus off recovery mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusMode(cANFD5_1_1_CAN_ChannelHandle, DSCAN_CH_MODE_BUSON)) != DSCAN_NO_ERROR)                      
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus mode.");       
                                                                                                  
if ((Error = DsCanCh_setFeedThroughMode(cANFD5_1_1_CAN_ChannelHandle, DSCAN_CH_FEED_THROUGH_DISABLED)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting feedthrough mode.");

if ((Error = DsCanCh_setTransmissionSuspend(cANFD5_1_1_CAN_ChannelHandle, 0)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting transmission suspend.");


if ((Error = DsCanCh_setFeature(cANFD5_1_1_CAN_ChannelHandle, DSCAN_CH_FEATURE_FD_ON)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD mode");
if ((Error = DsCanCh_setFeature(cANFD5_1_1_CAN_ChannelHandle, DSCAN_CH_FEATURE_FD_ISO_MODE)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD ISO mode");
if ((Error = DsCanCh_setBaudRateDataPhase(cANFD5_1_1_CAN_ChannelHandle, 2000000)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD data phase baud rate");
if (((Error = DsCanCh_setSamplePointDataPhase(cANFD5_1_1_CAN_ChannelHandle, 0.75)) != DSCAN_NO_ERROR)
      && (Error != DSCAN_ERROR_FEATURE)                
      && (Error != DSCAN_ERROR_INVALID_CH_SAMPLEPOINT))    
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD samplepoint for data phase");

if ((Error = DsCanCh_setTxRetryCount(cANFD5_1_1_CAN_ChannelHandle, DSCAN_MSG_RETRY_MODE_ACTIVE, 3)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting message retry mode");
    DsCanCh_apply(cANFD5_1_1_CAN_ChannelHandle);
}
DsCanCh_connectTaskId(cANFD5_1_1_CAN_ChannelHandle, cANFD5_1_1_CAN_RX_TaskId);

}

  void
ApSimEngineOnTerminateIo_ctlcBODY_0_CANFD5_1_1(
    DsTErrorList ErrorList) 
{
/* CAN I/O function "CANFD5-1-1" */

}

  void
ApSimEngineOnUnloadIo_ctlcBODY_0_CANFD5_1_1(
    DsTErrorList ErrorList) 
{
DsCanCh_unregister(&cANFD5_1_1_CAN_ChannelHandle, "IoFunction");
DsCanCh_destroy(&cANFD5_1_1_CAN_ChannelHandle);
DsCanBoard_destroy(&cANFD5_1_1_CAN_BoardHandle);

}

  void
ApSimEngineOnInitIoPreRtosInit_ctlcBODY_2_CANFD_5_2_1(
    DsTErrorList ErrorList, DsCApplication* pApp) 
{
pCANFD_5_2_1_DriverHandle = DsCImbsIoCan::create(ErrorList, pApp);
/* Support CAN channel access of implementation package code (e.g. RTICANMM, VECU) */
CANPluginChannelAddress_CANFDminus5minus2minus1 = CANBUSACCESS_7_CAN_CH;


pCANFD_5_2_1_DriverHandle->bindIoChannel(ErrorList, DsCIoChannel::getInstance(ErrorList, CANBUSACCESS_7_CAN_CH),1 , 0); // Type (handshake), Role (slave)

}

  void
ApSimEngineOnInitIoPostRtosInit_ctlcBODY_0_CANFD_5_2_1(
    DsTErrorList ErrorList) 
{
pCANFD_5_2_1_DriverHandle->setName(ErrorList, "CANFD-5-2-1");
/* CAN I/O function "CANFD-5-2-1" */
{                                                                                                      
    DsTError Error = DSCAN_NO_ERROR;                                                                   
    if (((Error = DsCanBoard_create(&cANFD_5_2_1_CAN_BoardHandle, CANBUSACCESS_7_CAN_CH)) != DSCAN_NO_ERROR)                                     
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error during board initialization.");       
    if (((Error = DsCanCh_create(&cANFD_5_2_1_CAN_ChannelHandle, cANFD_5_2_1_CAN_BoardHandle, CANBUSACCESS_7_CAN_CH)) != DSCAN_NO_ERROR)                                   
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error during channel initialization.");
DsCanCh_setFeature(cANFD_5_2_1_CAN_ChannelHandle, DSCAN_CH_FEATURE_SIMTIMECONV_OFF);

if (((Error = DsCanCh_register(&cANFD_5_2_1_CAN_ChannelHandle, cANFD_5_2_1_CAN_BoardHandle, CANBUSACCESS_7_CAN_CH, "IoFunction")) != DSCAN_NO_ERROR))
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error during channel registration.");

if ((Error = DsCanCh_setDescriptor(cANFD_5_2_1_CAN_ChannelHandle, "CAN_Channel__7_")) != DSCAN_NO_ERROR)                               
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                                     "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel descriptor.");       
                                                                                                                  
if ((Error = DsCanCh_setBaudRate(cANFD_5_2_1_CAN_ChannelHandle, 500000)) != DSCAN_NO_ERROR)                                     
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel baudrate.");       
                                                                                                  
if (((Error = DsCanCh_setSamplePoint(cANFD_5_2_1_CAN_ChannelHandle, 0.8)) != DSCAN_NO_ERROR)                                 
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_SAMPLEPOINT))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel sample point.");       
                                                                                                  
if (((Error = DsCanCh_setTermination(cANFD_5_2_1_CAN_ChannelHandle, DSCAN_CH_TERMINATION_PARALLEL_AB)) != DSCAN_NO_ERROR)                                  
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_TERMINATION))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel termination.");       
                                                                                                  
if ((Error = DsCanCh_setTransceiver(cANFD_5_2_1_CAN_ChannelHandle, DSCAN_CH_TRANSCEIVER_CAN_ISO11898_2)) != DSCAN_NO_ERROR)                                  
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel transceiver.");       
                                                                                                  
if ((Error = DsCanCh_setReceiveMode(cANFD_5_2_1_CAN_ChannelHandle, DSCAN_CH_RECEIVE_MODE_NORMAL)) != DSCAN_NO_ERROR)         
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting receive mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusOffRecoveryMode(cANFD_5_2_1_CAN_ChannelHandle, DSCAN_CH_BUSOFF_RECOVERY_ENABLED)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus off recovery mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusMode(cANFD_5_2_1_CAN_ChannelHandle, DSCAN_CH_MODE_BUSON)) != DSCAN_NO_ERROR)                      
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus mode.");       
                                                                                                  
if ((Error = DsCanCh_setFeedThroughMode(cANFD_5_2_1_CAN_ChannelHandle, DSCAN_CH_FEED_THROUGH_DISABLED)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting feedthrough mode.");

if ((Error = DsCanCh_setTransmissionSuspend(cANFD_5_2_1_CAN_ChannelHandle, 0)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting transmission suspend.");


if ((Error = DsCanCh_setFeature(cANFD_5_2_1_CAN_ChannelHandle, DSCAN_CH_FEATURE_FD_ON)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD mode");
if ((Error = DsCanCh_setFeature(cANFD_5_2_1_CAN_ChannelHandle, DSCAN_CH_FEATURE_FD_ISO_MODE)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD ISO mode");
if ((Error = DsCanCh_setBaudRateDataPhase(cANFD_5_2_1_CAN_ChannelHandle, 2000000)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD data phase baud rate");
if (((Error = DsCanCh_setSamplePointDataPhase(cANFD_5_2_1_CAN_ChannelHandle, 0.75)) != DSCAN_NO_ERROR)
      && (Error != DSCAN_ERROR_FEATURE)                
      && (Error != DSCAN_ERROR_INVALID_CH_SAMPLEPOINT))    
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD samplepoint for data phase");

if ((Error = DsCanCh_setTxRetryCount(cANFD_5_2_1_CAN_ChannelHandle, DSCAN_MSG_RETRY_MODE_ACTIVE, 3)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD-5-2-1: %1", Error, __DS_ERROR_POS__, "%s", "Error setting message retry mode");
    DsCanCh_apply(cANFD_5_2_1_CAN_ChannelHandle);
}
DsCanCh_connectTaskId(cANFD_5_2_1_CAN_ChannelHandle, cANFD_5_2_1_CAN_RX_TaskId);

}

  void
ApSimEngineOnTerminateIo_ctlcBODY_0_CANFD_5_2_1(
    DsTErrorList ErrorList) 
{
/* CAN I/O function "CANFD-5-2-1" */

}

  void
ApSimEngineOnUnloadIo_ctlcBODY_0_CANFD_5_2_1(
    DsTErrorList ErrorList) 
{
DsCanCh_unregister(&cANFD_5_2_1_CAN_ChannelHandle, "IoFunction");
DsCanCh_destroy(&cANFD_5_2_1_CAN_ChannelHandle);
DsCanBoard_destroy(&cANFD_5_2_1_CAN_BoardHandle);

}

  void
ApSimEngineOnInitIoPreRtosInit_ctlcBODY_2_CANFD5_1_2(
    DsTErrorList ErrorList, DsCApplication* pApp) 
{
pCANFD5_1_2_DriverHandle = DsCImbsIoCan::create(ErrorList, pApp);
/* Support CAN channel access of implementation package code (e.g. RTICANMM, VECU) */
CANPluginChannelAddress_CANFD5minus1minus2 = CANBUSACCESS_6_CAN_CH;


pCANFD5_1_2_DriverHandle->bindIoChannel(ErrorList, DsCIoChannel::getInstance(ErrorList, CANBUSACCESS_6_CAN_CH),1 , 0); // Type (handshake), Role (slave)

}

  void
ApSimEngineOnInitIoPostRtosInit_ctlcBODY_0_CANFD5_1_2(
    DsTErrorList ErrorList) 
{
pCANFD5_1_2_DriverHandle->setName(ErrorList, "CANFD5-1-2");
/* CAN I/O function "CANFD5-1-2" */
{                                                                                                      
    DsTError Error = DSCAN_NO_ERROR;                                                                   
    if (((Error = DsCanBoard_create(&cANFD5_1_2_CAN_BoardHandle, CANBUSACCESS_6_CAN_CH)) != DSCAN_NO_ERROR)                                     
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error during board initialization.");       
    if (((Error = DsCanCh_create(&cANFD5_1_2_CAN_ChannelHandle, cANFD5_1_2_CAN_BoardHandle, CANBUSACCESS_6_CAN_CH)) != DSCAN_NO_ERROR)                                   
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error during channel initialization.");
DsCanCh_setFeature(cANFD5_1_2_CAN_ChannelHandle, DSCAN_CH_FEATURE_SIMTIMECONV_OFF);

if (((Error = DsCanCh_register(&cANFD5_1_2_CAN_ChannelHandle, cANFD5_1_2_CAN_BoardHandle, CANBUSACCESS_6_CAN_CH, "IoFunction")) != DSCAN_NO_ERROR))
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error during channel registration.");

if ((Error = DsCanCh_setDescriptor(cANFD5_1_2_CAN_ChannelHandle, "CAN_Channel__6_")) != DSCAN_NO_ERROR)                               
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                                     "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel descriptor.");       
                                                                                                                  
if ((Error = DsCanCh_setBaudRate(cANFD5_1_2_CAN_ChannelHandle, 500000)) != DSCAN_NO_ERROR)                                     
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel baudrate.");       
                                                                                                  
if (((Error = DsCanCh_setSamplePoint(cANFD5_1_2_CAN_ChannelHandle, 0.8)) != DSCAN_NO_ERROR)                                 
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_SAMPLEPOINT))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel sample point.");       
                                                                                                  
if (((Error = DsCanCh_setTermination(cANFD5_1_2_CAN_ChannelHandle, DSCAN_CH_TERMINATION_PARALLEL_AB)) != DSCAN_NO_ERROR)                                  
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_TERMINATION))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel termination.");       
                                                                                                  
if ((Error = DsCanCh_setTransceiver(cANFD5_1_2_CAN_ChannelHandle, DSCAN_CH_TRANSCEIVER_CAN_ISO11898_2)) != DSCAN_NO_ERROR)                                  
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel transceiver.");       
                                                                                                  
if ((Error = DsCanCh_setReceiveMode(cANFD5_1_2_CAN_ChannelHandle, DSCAN_CH_RECEIVE_MODE_NORMAL)) != DSCAN_NO_ERROR)         
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting receive mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusOffRecoveryMode(cANFD5_1_2_CAN_ChannelHandle, DSCAN_CH_BUSOFF_RECOVERY_ENABLED)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus off recovery mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusMode(cANFD5_1_2_CAN_ChannelHandle, DSCAN_CH_MODE_BUSON)) != DSCAN_NO_ERROR)                      
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus mode.");       
                                                                                                  
if ((Error = DsCanCh_setFeedThroughMode(cANFD5_1_2_CAN_ChannelHandle, DSCAN_CH_FEED_THROUGH_DISABLED)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting feedthrough mode.");

if ((Error = DsCanCh_setTransmissionSuspend(cANFD5_1_2_CAN_ChannelHandle, 0)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting transmission suspend.");


if ((Error = DsCanCh_setFeature(cANFD5_1_2_CAN_ChannelHandle, DSCAN_CH_FEATURE_FD_ON)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD mode");
if ((Error = DsCanCh_setFeature(cANFD5_1_2_CAN_ChannelHandle, DSCAN_CH_FEATURE_FD_ISO_MODE)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD ISO mode");
if ((Error = DsCanCh_setBaudRateDataPhase(cANFD5_1_2_CAN_ChannelHandle, 2000000)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD data phase baud rate");
if (((Error = DsCanCh_setSamplePointDataPhase(cANFD5_1_2_CAN_ChannelHandle, 0.75)) != DSCAN_NO_ERROR)
      && (Error != DSCAN_ERROR_FEATURE)                
      && (Error != DSCAN_ERROR_INVALID_CH_SAMPLEPOINT))    
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD samplepoint for data phase");

if ((Error = DsCanCh_setTxRetryCount(cANFD5_1_2_CAN_ChannelHandle, DSCAN_MSG_RETRY_MODE_ACTIVE, 3)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-1-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting message retry mode");
    DsCanCh_apply(cANFD5_1_2_CAN_ChannelHandle);
}
DsCanCh_connectTaskId(cANFD5_1_2_CAN_ChannelHandle, cANFD5_1_2_CAN_RX_TaskId);

}

  void
ApSimEngineOnTerminateIo_ctlcBODY_0_CANFD5_1_2(
    DsTErrorList ErrorList) 
{
/* CAN I/O function "CANFD5-1-2" */

}

  void
ApSimEngineOnUnloadIo_ctlcBODY_0_CANFD5_1_2(
    DsTErrorList ErrorList) 
{
DsCanCh_unregister(&cANFD5_1_2_CAN_ChannelHandle, "IoFunction");
DsCanCh_destroy(&cANFD5_1_2_CAN_ChannelHandle);
DsCanBoard_destroy(&cANFD5_1_2_CAN_BoardHandle);

}

  void
ApSimEngineOnInitIoPreRtosInit_ctlcBODY_2_CANFD5_2_2(
    DsTErrorList ErrorList, DsCApplication* pApp) 
{
pCANFD5_2_2_DriverHandle = DsCImbsIoCan::create(ErrorList, pApp);
/* Support CAN channel access of implementation package code (e.g. RTICANMM, VECU) */
CANPluginChannelAddress_CANFD5minus2minus2 = CANBUSACCESS_8_CAN_CH;


pCANFD5_2_2_DriverHandle->bindIoChannel(ErrorList, DsCIoChannel::getInstance(ErrorList, CANBUSACCESS_8_CAN_CH),1 , 0); // Type (handshake), Role (slave)

}

  void
ApSimEngineOnInitIoPostRtosInit_ctlcBODY_0_CANFD5_2_2(
    DsTErrorList ErrorList) 
{
pCANFD5_2_2_DriverHandle->setName(ErrorList, "CANFD5-2-2");
/* CAN I/O function "CANFD5-2-2" */
{                                                                                                      
    DsTError Error = DSCAN_NO_ERROR;                                                                   
    if (((Error = DsCanBoard_create(&cANFD5_2_2_CAN_BoardHandle, CANBUSACCESS_8_CAN_CH)) != DSCAN_NO_ERROR)                                     
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error during board initialization.");       
    if (((Error = DsCanCh_create(&cANFD5_2_2_CAN_ChannelHandle, cANFD5_2_2_CAN_BoardHandle, CANBUSACCESS_8_CAN_CH)) != DSCAN_NO_ERROR)                                   
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error during channel initialization.");
DsCanCh_setFeature(cANFD5_2_2_CAN_ChannelHandle, DSCAN_CH_FEATURE_SIMTIMECONV_OFF);

if (((Error = DsCanCh_register(&cANFD5_2_2_CAN_ChannelHandle, cANFD5_2_2_CAN_BoardHandle, CANBUSACCESS_8_CAN_CH, "IoFunction")) != DSCAN_NO_ERROR))
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error during channel registration.");

if ((Error = DsCanCh_setDescriptor(cANFD5_2_2_CAN_ChannelHandle, "CAN_Channel__8_")) != DSCAN_NO_ERROR)                               
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                                     "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel descriptor.");       
                                                                                                                  
if ((Error = DsCanCh_setBaudRate(cANFD5_2_2_CAN_ChannelHandle, 500000)) != DSCAN_NO_ERROR)                                     
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel baudrate.");       
                                                                                                  
if (((Error = DsCanCh_setSamplePoint(cANFD5_2_2_CAN_ChannelHandle, 0.8)) != DSCAN_NO_ERROR)                                 
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_SAMPLEPOINT))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel sample point.");       
                                                                                                  
if (((Error = DsCanCh_setTermination(cANFD5_2_2_CAN_ChannelHandle, DSCAN_CH_TERMINATION_NONE)) != DSCAN_NO_ERROR)                                  
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_TERMINATION))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel termination.");       
                                                                                                  
if ((Error = DsCanCh_setTransceiver(cANFD5_2_2_CAN_ChannelHandle, DSCAN_CH_TRANSCEIVER_CAN_ISO11898_2)) != DSCAN_NO_ERROR)                                  
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel transceiver.");       
                                                                                                  
if ((Error = DsCanCh_setReceiveMode(cANFD5_2_2_CAN_ChannelHandle, DSCAN_CH_RECEIVE_MODE_NORMAL)) != DSCAN_NO_ERROR)         
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting receive mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusOffRecoveryMode(cANFD5_2_2_CAN_ChannelHandle, DSCAN_CH_BUSOFF_RECOVERY_ENABLED)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus off recovery mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusMode(cANFD5_2_2_CAN_ChannelHandle, DSCAN_CH_MODE_BUSON)) != DSCAN_NO_ERROR)                      
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus mode.");       
                                                                                                  
if ((Error = DsCanCh_setFeedThroughMode(cANFD5_2_2_CAN_ChannelHandle, DSCAN_CH_FEED_THROUGH_DISABLED)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting feedthrough mode.");

if ((Error = DsCanCh_setTransmissionSuspend(cANFD5_2_2_CAN_ChannelHandle, 0)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting transmission suspend.");


if ((Error = DsCanCh_setFeature(cANFD5_2_2_CAN_ChannelHandle, DSCAN_CH_FEATURE_FD_ON)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD mode");
if ((Error = DsCanCh_setFeature(cANFD5_2_2_CAN_ChannelHandle, DSCAN_CH_FEATURE_FD_ISO_MODE)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD ISO mode");
if ((Error = DsCanCh_setBaudRateDataPhase(cANFD5_2_2_CAN_ChannelHandle, 2000000)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD data phase baud rate");
if (((Error = DsCanCh_setSamplePointDataPhase(cANFD5_2_2_CAN_ChannelHandle, 0.75)) != DSCAN_NO_ERROR)
      && (Error != DSCAN_ERROR_FEATURE)                
      && (Error != DSCAN_ERROR_INVALID_CH_SAMPLEPOINT))    
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting CAN FD samplepoint for data phase");

if ((Error = DsCanCh_setTxRetryCount(cANFD5_2_2_CAN_ChannelHandle, DSCAN_MSG_RETRY_MODE_ACTIVE, 3)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CANFD5-2-2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting message retry mode");
    DsCanCh_apply(cANFD5_2_2_CAN_ChannelHandle);
}
DsCanCh_connectTaskId(cANFD5_2_2_CAN_ChannelHandle, cANFD5_2_2_CAN_RX_TaskId);

}

  void
ApSimEngineOnTerminateIo_ctlcBODY_0_CANFD5_2_2(
    DsTErrorList ErrorList) 
{
/* CAN I/O function "CANFD5-2-2" */

}

  void
ApSimEngineOnUnloadIo_ctlcBODY_0_CANFD5_2_2(
    DsTErrorList ErrorList) 
{
DsCanCh_unregister(&cANFD5_2_2_CAN_ChannelHandle, "IoFunction");
DsCanCh_destroy(&cANFD5_2_2_CAN_ChannelHandle);
DsCanBoard_destroy(&cANFD5_2_2_CAN_BoardHandle);

}

  void
ApSimEngineOnInitIoPreRtosInit_ctlcBODY_2_CAN2(
    DsTErrorList ErrorList, DsCApplication* pApp) 
{
pCAN2_DriverHandle = DsCImbsIoCan::create(ErrorList, pApp);
/* Support CAN channel access of implementation package code (e.g. RTICANMM, VECU) */
CANPluginChannelAddress_CAN2 = CANBUSACCESS_1_CAN_CH;


pCAN2_DriverHandle->bindIoChannel(ErrorList, DsCIoChannel::getInstance(ErrorList, CANBUSACCESS_1_CAN_CH),1 , 0); // Type (handshake), Role (slave)

}

  void
ApSimEngineOnInitIoPostRtosInit_ctlcBODY_0_CAN2(
    DsTErrorList ErrorList) 
{
pCAN2_DriverHandle->setName(ErrorList, "CAN2");
/* CAN I/O function "CAN2" */
{                                                                                                      
    DsTError Error = DSCAN_NO_ERROR;                                                                   
    if (((Error = DsCanBoard_create(&cAN2_CAN_BoardHandle, CANBUSACCESS_1_CAN_CH)) != DSCAN_NO_ERROR)                                     
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error during board initialization.");       
    if (((Error = DsCanCh_create(&cAN2_CAN_ChannelHandle, cAN2_CAN_BoardHandle, CANBUSACCESS_1_CAN_CH)) != DSCAN_NO_ERROR)                                   
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error during channel initialization.");
DsCanCh_setFeature(cAN2_CAN_ChannelHandle, DSCAN_CH_FEATURE_SIMTIMECONV_OFF);

if ((Error = DsCanCh_setDescriptor(cAN2_CAN_ChannelHandle, "CAN_Channel__1_")) != DSCAN_NO_ERROR)                               
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                                     "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel descriptor.");       
                                                                                                                  
if ((Error = DsCanCh_setBaudRate(cAN2_CAN_ChannelHandle, 500000)) != DSCAN_NO_ERROR)                                     
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel baudrate.");       
                                                                                                  
if (((Error = DsCanCh_setSamplePoint(cAN2_CAN_ChannelHandle, 0.8)) != DSCAN_NO_ERROR)                                 
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_SAMPLEPOINT))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel sample point.");       
                                                                                                  
if (((Error = DsCanCh_setTermination(cAN2_CAN_ChannelHandle, DSCAN_CH_TERMINATION_NONE)) != DSCAN_NO_ERROR)                                  
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_TERMINATION))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel termination.");       
                                                                                                  
if ((Error = DsCanCh_setTransceiver(cAN2_CAN_ChannelHandle, DSCAN_CH_TRANSCEIVER_CAN_ISO11898_2)) != DSCAN_NO_ERROR)                                  
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel transceiver.");       
                                                                                                  
if ((Error = DsCanCh_setReceiveMode(cAN2_CAN_ChannelHandle, DSCAN_CH_RECEIVE_MODE_NORMAL)) != DSCAN_NO_ERROR)         
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting receive mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusOffRecoveryMode(cAN2_CAN_ChannelHandle, DSCAN_CH_BUSOFF_RECOVERY_ENABLED)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus off recovery mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusMode(cAN2_CAN_ChannelHandle, DSCAN_CH_MODE_BUSON)) != DSCAN_NO_ERROR)                      
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus mode.");       
                                                                                                  
if ((Error = DsCanCh_setFeedThroughMode(cAN2_CAN_ChannelHandle, DSCAN_CH_FEED_THROUGH_DISABLED)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting feedthrough mode.");

if ((Error = DsCanCh_setTransmissionSuspend(cAN2_CAN_ChannelHandle, 0)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting transmission suspend.");


if ((Error = DsCanCh_setTxRetryCount(cAN2_CAN_ChannelHandle, DSCAN_MSG_RETRY_MODE_ACTIVE, 3)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting message retry mode");
    DsCanCh_apply(cAN2_CAN_ChannelHandle);

if (((Error = DsCanBusStat_create(&cAN2_CAN_BusStatisticsHandler, cAN2_CAN_ChannelHandle)) != DSCAN_NO_ERROR) && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus stat.");       
                                                                                                                       
if (((Error = DsCanBusStat_setUpdatePeriod(cAN2_CAN_BusStatisticsHandler, 1)) != DSCAN_NO_ERROR) && (Error != DSCAN_ERROR_INVALID_BUSSTAT_PERIOD))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus stat period.");       

if ((Error = DsCanBusStat_apply(cAN2_CAN_BusStatisticsHandler)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error applying bus statistics");

if ((Error = DsCanBusStat_start(cAN2_CAN_BusStatisticsHandler)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CAN2: %1", Error, __DS_ERROR_POS__, "%s", "Error starting bus statistics");
}
DsCanCh_connectTaskId(cAN2_CAN_ChannelHandle, cAN2_CAN_RX_TaskId);

}

  void
ApSimEngineOnTerminateIo_ctlcBODY_0_CAN2(
    DsTErrorList ErrorList) 
{
/* CAN I/O function "CAN2" */

}

  void
ApSimEngineOnUnloadIo_ctlcBODY_0_CAN2(
    DsTErrorList ErrorList) 
{
DsCanCh_destroy(&cAN2_CAN_ChannelHandle);
DsCanBoard_destroy(&cAN2_CAN_BoardHandle);

}

  void
ApSimEngineOnInitIoPreRtosInit_ctlcBODY_2_CAN3(
    DsTErrorList ErrorList, DsCApplication* pApp) 
{
pCAN3_DriverHandle = DsCImbsIoCan::create(ErrorList, pApp);
/* Support CAN channel access of implementation package code (e.g. RTICANMM, VECU) */
CANPluginChannelAddress_CAN3 = CANBUSACCESS_3_CAN_CH;


pCAN3_DriverHandle->bindIoChannel(ErrorList, DsCIoChannel::getInstance(ErrorList, CANBUSACCESS_3_CAN_CH),1 , 0); // Type (handshake), Role (slave)

}

  void
ApSimEngineOnInitIoPostRtosInit_ctlcBODY_0_CAN3(
    DsTErrorList ErrorList) 
{
pCAN3_DriverHandle->setName(ErrorList, "CAN3");
/* CAN I/O function "CAN3" */
{                                                                                                      
    DsTError Error = DSCAN_NO_ERROR;                                                                   
    if (((Error = DsCanBoard_create(&cAN3_CAN_BoardHandle, CANBUSACCESS_3_CAN_CH)) != DSCAN_NO_ERROR)                                     
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error during board initialization.");       
    if (((Error = DsCanCh_create(&cAN3_CAN_ChannelHandle, cAN3_CAN_BoardHandle, CANBUSACCESS_3_CAN_CH)) != DSCAN_NO_ERROR)                                   
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error during channel initialization.");
DsCanCh_setFeature(cAN3_CAN_ChannelHandle, DSCAN_CH_FEATURE_SIMTIMECONV_OFF);

if ((Error = DsCanCh_setDescriptor(cAN3_CAN_ChannelHandle, "CAN_Channel__3_")) != DSCAN_NO_ERROR)                               
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                                     "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel descriptor.");       
                                                                                                                  
if ((Error = DsCanCh_setBaudRate(cAN3_CAN_ChannelHandle, 500000)) != DSCAN_NO_ERROR)                                     
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel baudrate.");       
                                                                                                  
if (((Error = DsCanCh_setSamplePoint(cAN3_CAN_ChannelHandle, 0.8)) != DSCAN_NO_ERROR)                                 
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_SAMPLEPOINT))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel sample point.");       
                                                                                                  
if (((Error = DsCanCh_setTermination(cAN3_CAN_ChannelHandle, DSCAN_CH_TERMINATION_NONE)) != DSCAN_NO_ERROR)                                  
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_TERMINATION))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel termination.");       
                                                                                                  
if ((Error = DsCanCh_setTransceiver(cAN3_CAN_ChannelHandle, DSCAN_CH_TRANSCEIVER_CAN_ISO11898_2)) != DSCAN_NO_ERROR)                                  
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel transceiver.");       
                                                                                                  
if ((Error = DsCanCh_setReceiveMode(cAN3_CAN_ChannelHandle, DSCAN_CH_RECEIVE_MODE_NORMAL)) != DSCAN_NO_ERROR)         
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error setting receive mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusOffRecoveryMode(cAN3_CAN_ChannelHandle, DSCAN_CH_BUSOFF_RECOVERY_ENABLED)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus off recovery mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusMode(cAN3_CAN_ChannelHandle, DSCAN_CH_MODE_BUSON)) != DSCAN_NO_ERROR)                      
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus mode.");       
                                                                                                  
if ((Error = DsCanCh_setFeedThroughMode(cAN3_CAN_ChannelHandle, DSCAN_CH_FEED_THROUGH_DISABLED)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error setting feedthrough mode.");

if ((Error = DsCanCh_setTransmissionSuspend(cAN3_CAN_ChannelHandle, 0)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error setting transmission suspend.");


if ((Error = DsCanCh_setTxRetryCount(cAN3_CAN_ChannelHandle, DSCAN_MSG_RETRY_MODE_ACTIVE, 3)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CAN3: %1", Error, __DS_ERROR_POS__, "%s", "Error setting message retry mode");
    DsCanCh_apply(cAN3_CAN_ChannelHandle);
}

}

  void
ApSimEngineOnTerminateIo_ctlcBODY_0_CAN3(
    DsTErrorList ErrorList) 
{
/* CAN I/O function "CAN3" */

}

  void
ApSimEngineOnUnloadIo_ctlcBODY_0_CAN3(
    DsTErrorList ErrorList) 
{
DsCanCh_destroy(&cAN3_CAN_ChannelHandle);
DsCanBoard_destroy(&cAN3_CAN_BoardHandle);

}

  void
ApSimEngineOnInitIoPreRtosInit_ctlcBODY_2_CAN4(
    DsTErrorList ErrorList, DsCApplication* pApp) 
{
pCAN4_DriverHandle = DsCImbsIoCan::create(ErrorList, pApp);
/* Support CAN channel access of implementation package code (e.g. RTICANMM, VECU) */
CANPluginChannelAddress_CAN4 = CANBUSACCESS_4_CAN_CH;


pCAN4_DriverHandle->bindIoChannel(ErrorList, DsCIoChannel::getInstance(ErrorList, CANBUSACCESS_4_CAN_CH),1 , 0); // Type (handshake), Role (slave)

}

  void
ApSimEngineOnInitIoPostRtosInit_ctlcBODY_0_CAN4(
    DsTErrorList ErrorList) 
{
pCAN4_DriverHandle->setName(ErrorList, "CAN4");
/* CAN I/O function "CAN4" */
{                                                                                                      
    DsTError Error = DSCAN_NO_ERROR;                                                                   
    if (((Error = DsCanBoard_create(&cAN4_CAN_BoardHandle, CANBUSACCESS_4_CAN_CH)) != DSCAN_NO_ERROR)                                     
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error during board initialization.");       
    if (((Error = DsCanCh_create(&cAN4_CAN_ChannelHandle, cAN4_CAN_BoardHandle, CANBUSACCESS_4_CAN_CH)) != DSCAN_NO_ERROR)                                   
          && (Error != DSCAN_ERROR_NODE_SIMULATED)                                                     
          && (Error != DSCAN_ERROR_OBJECT_REUSED))                                                     
        SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                         "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error during channel initialization.");
DsCanCh_setFeature(cAN4_CAN_ChannelHandle, DSCAN_CH_FEATURE_SIMTIMECONV_OFF);

if ((Error = DsCanCh_setDescriptor(cAN4_CAN_ChannelHandle, "CAN_Channel__4_")) != DSCAN_NO_ERROR)                               
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                                     "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel descriptor.");       
                                                                                                                  
if ((Error = DsCanCh_setBaudRate(cAN4_CAN_ChannelHandle, 500000)) != DSCAN_NO_ERROR)                                     
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel baudrate.");       
                                                                                                  
if (((Error = DsCanCh_setSamplePoint(cAN4_CAN_ChannelHandle, 0.8)) != DSCAN_NO_ERROR)                                 
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_SAMPLEPOINT))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel sample point.");       
                                                                                                  
if (((Error = DsCanCh_setTermination(cAN4_CAN_ChannelHandle, DSCAN_CH_TERMINATION_PARALLEL_AB)) != DSCAN_NO_ERROR)                                  
     && (Error != DSCAN_ERROR_FEATURE)                                                            
     && (Error != DSCAN_ERROR_INVALID_CH_TERMINATION))                                            
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel termination.");       
                                                                                                  
if ((Error = DsCanCh_setTransceiver(cAN4_CAN_ChannelHandle, DSCAN_CH_TRANSCEIVER_CAN_ISO11898_2)) != DSCAN_NO_ERROR)                                  
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error setting channel transceiver.");       
                                                                                                  
if ((Error = DsCanCh_setReceiveMode(cAN4_CAN_ChannelHandle, DSCAN_CH_RECEIVE_MODE_NORMAL)) != DSCAN_NO_ERROR)         
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error setting receive mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusOffRecoveryMode(cAN4_CAN_ChannelHandle, DSCAN_CH_BUSOFF_RECOVERY_ENABLED)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus off recovery mode.");       
                                                                                                  
if ((Error = DsCanCh_setBusMode(cAN4_CAN_ChannelHandle, DSCAN_CH_MODE_BUSON)) != DSCAN_NO_ERROR)                      
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error setting bus mode.");       
                                                                                                  
if ((Error = DsCanCh_setFeedThroughMode(cAN4_CAN_ChannelHandle, DSCAN_CH_FEED_THROUGH_DISABLED)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error setting feedthrough mode.");

if ((Error = DsCanCh_setTransmissionSuspend(cAN4_CAN_ChannelHandle, 0)) != DSCAN_NO_ERROR)                              
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0,                         
                                     "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error setting transmission suspend.");


if ((Error = DsCanCh_setTxRetryCount(cAN4_CAN_ChannelHandle, DSCAN_MSG_RETRY_MODE_ACTIVE, 3)) != DSCAN_NO_ERROR)
    SimEngineApplGet()->errorMessage(DsNApplication::Severity::Stop, 0, 0, "CAN4: %1", Error, __DS_ERROR_POS__, "%s", "Error setting message retry mode");
    DsCanCh_apply(cAN4_CAN_ChannelHandle);
}

}

  void
ApSimEngineOnTerminateIo_ctlcBODY_0_CAN4(
    DsTErrorList ErrorList) 
{
/* CAN I/O function "CAN4" */

}

  void
ApSimEngineOnUnloadIo_ctlcBODY_0_CAN4(
    DsTErrorList ErrorList) 
{
DsCanCh_destroy(&cAN4_CAN_ChannelHandle);
DsCanBoard_destroy(&cAN4_CAN_BoardHandle);

}

#endif                                 /* DSSIMENGINE_ACCESSPOINT_CAN_CPP_ */
/* [EOF] */
