/****************************************************************************\ 
 *** 
 *** File                  : rtosal_task.cpp
 *** 
 *** Generated by dSPACE Tools.
 *** (c) Copyright 2013, dSPACE GmbH. All rights reserved.
\****************************************************************************/

#if !defined(RTOSAL_TASK_CPP_)
#  define    RTOSAL_TASK_CPP_


/* -- Include directives. -- */
#  include <DsApplicationInterface.h>
#  include "dssimengine_api.h"
#  include "rtosal_msg.h"
#  include "rtosal_taskap.h"
#  include "IOCode_Data.h"
#  include "ADAS_CAN_232434.h"
#  include "CR_PCANFD_232436.h"
#  include "RSDS_PCANFD_232435.h"
#  include "PT_CAN_232437.h"
#  include <dsrtt.h>
#  include "rtosal_task.h"

#  if defined(EXTERN_C_DECL)
#    undef EXTERN_C_DECL
#  endif
#  if defined(__cplusplus)
#    define EXTERN_C_DECL extern "C"
#  else
#    define EXTERN_C_DECL extern
#  endif


/* -- Defines and directives in module scope. After include directives. -- */
DS_DEFINE_TASK(DsCRtosAlPeriodic_Task_1);
DS_DEFINE_TASK(DsCRtosAlTask_iUDP_Receive_i3_iData_Received_);
DS_DEFINE_TASK(DsCRtosAlTask_iUDP_Receive_2_Data_Received_);
DS_DEFINE_TASK(DsCRtosAlBus_Configuration_iADAS_CAN_);
DS_DEFINE_TASK(DsCRtosAlCAN_RX_Task_i5_i_CANFD5_1_1_);
DS_DEFINE_TASK(DsCRtosAlBus_Configuration_iCR_PCANFD_);
DS_DEFINE_TASK(DsCRtosAlCAN_RX_Task_i7_i_CANFD_5_2_1_);
DS_DEFINE_TASK(DsCRtosAlBus_Configuration_iRSDS_PCANFD_);
DS_DEFINE_TASK(DsCRtosAlCAN_RX_Task_i6_i_CANFD5_1_2_);
DS_DEFINE_TASK(DsCRtosAlBus_Configuration_iPT_CAN_);
DS_DEFINE_TASK(DsCRtosAlCAN_RX_Task_i2_i_CANFD5_2_2_);
DS_DEFINE_TASK(DsCRtosAlCAN_RX_Task_i1_i_CAN2_);

/* -- Variable declarations in module scope. -- */
DsCTask* pRtosAlPeriodic_Task_1 = 0;
DsCTask* pRtosAlTask_iUDP_Receive_i3_iData_Received_ = 0;
DsCTask* pRtosAlTask_iUDP_Receive_2_Data_Received_ = 0;
DsCTask* pRtosAlBus_Configuration_iADAS_CAN_ = 0;
DsCTask* pRtosAlCAN_RX_Task_i5_i_CANFD5_1_1_ = 0;
DsCTask* pRtosAlBus_Configuration_iCR_PCANFD_ = 0;
DsCTask* pRtosAlCAN_RX_Task_i7_i_CANFD_5_2_1_ = 0;
DsCTask* pRtosAlBus_Configuration_iRSDS_PCANFD_ = 0;
DsCTask* pRtosAlCAN_RX_Task_i6_i_CANFD5_1_2_ = 0;
DsCTask* pRtosAlBus_Configuration_iPT_CAN_ = 0;
DsCTask* pRtosAlCAN_RX_Task_i2_i_CANFD5_2_2_ = 0;
DsCTask* pRtosAlCAN_RX_Task_i1_i_CAN2_ = 0;
DsCTimer* pRtosAlTimer_Periodic_Task_1 = 0;
DsCTimer* pRtosAlTimer_Bus_Configuration_iADAS_CAN_ = 0;
DsCTimer* pRtosAlTimer_Bus_Configuration_iCR_PCANFD_ = 0;
DsCTimer* pRtosAlTimer_Bus_Configuration_iRSDS_PCANFD_ = 0;
DsCTimer* pRtosAlTimer_Bus_Configuration_iPT_CAN_ = 0;

/* Task simulation time variable */
Float64 RtosAlTaskSimTime_Periodic_Task_1 = 0;
ULong64 StepCounter_Periodic_Task_1 = 0;

/* Task simulation time variable */
Float64 RtosAlTaskSimTime_Bus_Configuration = 0;
ULong64 StepCounter_Bus_Configuration = 0;

/* Task simulation time variable */
Float64 RtosAlTaskSimTime_Bus_Configuration_1 = 0;
ULong64 StepCounter_Bus_Configuration_1 = 0;

/* Task simulation time variable */
Float64 RtosAlTaskSimTime_Bus_Configuration_2 = 0;
ULong64 StepCounter_Bus_Configuration_2 = 0;

/* Task simulation time variable */
Float64 RtosAlTaskSimTime_Bus_Configuration_3 = 0;
ULong64 StepCounter_Bus_Configuration_3 = 0;

/* -- Declarations of extern functions. -- */

 EXTERN_C_DECL void Noa_Nofusion_DSRTMdlOutputs0(
    void);

 EXTERN_C_DECL void Noa_Nofusion_DSRTMdlUpdate0(
    void);

 EXTERN_C_DECL void dsmpb_event_task_Noa_Nofusion_TriggerEventPortSFcn_TID3_BT1(
    void);

 EXTERN_C_DECL void dsmpb_event_task_Noa_Nofusion_TriggerEventPortSFcn_o_TID4_BT2(
    void);

/* -- Declarations of module local functions. -- */

  void RtosAlHandleOverruns(
    DsCTask* pTask, int numberOfAcceptedOverruns);

/* -- Definitions of exported functions. -- */

  void
RtosAlDefaultDeadlineViolationHandler(
    DsTErrorList ErrorList, DsCTask* pTask) 
{
    SimEngineApplStop();
    DsCApplication* pAppl = SimEngineApplGet();
    char CallCounterStr[32];
    snprintf(CallCounterStr, 32, "%llu", pTask->getCallCounter());
    pAppl->errorMessage(RTOSAL_DEADLINE_VIOLATION, "%s%s%s", "Noa_Nofusion", pTask->getDescription(), CallCounterStr);

}

/* -- Definitions of module local functions. -- */

  void
DsCRtosAlPeriodic_Task_1::onRun(
    DsTErrorList ErrorList) 
{
    RtosAlTask_06_TaskEntry();

    DS_MODEL_ACCESS_WRITE(1,pRtosAlPeriodic_Task_1);
    dsrtt_script_service_pre_computation();
    Noa_Nofusion_DSRTMdlOutputs0();
    pRtosAlPeriodic_Task_1->daqService(1);
    pRtosAlPeriodic_Task_1->xcpService(0);

    DS_MODEL_ACCESS_READ(1,pRtosAlPeriodic_Task_1);
    dsrtt_script_service_post_computation();
    Noa_Nofusion_DSRTMdlUpdate0();
    RtosAlTask_06_TaskExit();

}

  void
DsCRtosAlPeriodic_Task_1::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlPeriodic_Task_1::getInstance();
    RtosAlHandleOverruns(pTask, -1);

}

  void
DsCRtosAlTask_iUDP_Receive_i3_iData_Received_::onRun(
    DsTErrorList ErrorList) 
{
    RtosAlTask_07_TaskEntry();
    dsmpb_event_task_Noa_Nofusion_TriggerEventPortSFcn_TID3_BT1();
    RtosAlTask_07_TaskExit();

}

  void
DsCRtosAlTask_iUDP_Receive_i3_iData_Received_::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlTask_iUDP_Receive_i3_iData_Received_::getInstance();
    RtosAlHandleOverruns(pTask, 0);

}

  void
DsCRtosAlTask_iUDP_Receive_2_Data_Received_::onRun(
    DsTErrorList ErrorList) 
{
    RtosAlTask_08_TaskEntry();
    dsmpb_event_task_Noa_Nofusion_TriggerEventPortSFcn_o_TID4_BT2();
    RtosAlTask_08_TaskExit();

}

  void
DsCRtosAlTask_iUDP_Receive_2_Data_Received_::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlTask_iUDP_Receive_2_Data_Received_::getInstance();
    RtosAlHandleOverruns(pTask, 0);

}

  void
DsCRtosAlBus_Configuration_iADAS_CAN_::onRun(
    DsTErrorList ErrorList) 
{
    RtosAl4cb87b8a_6856_4440_9e9e_4b18dd6b41e2_TaskEntry();
    ADAS_CAN_Com_MainFunction_232415();
    RtosAl4cb87b8a_6856_4440_9e9e_4b18dd6b41e2_TaskExit();

}

  void
DsCRtosAlBus_Configuration_iADAS_CAN_::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlBus_Configuration_iADAS_CAN_::getInstance();
    RtosAlHandleOverruns(pTask, -1);

}

  void
DsCRtosAlCAN_RX_Task_i5_i_CANFD5_1_1_::onRun(
    DsTErrorList ErrorList) 
{
    RtosAlCAN_RX_Task_TaskEntry();
    CAN_RX_Component_Function();
    RtosAlCAN_RX_Task_TaskExit();

}

  void
DsCRtosAlCAN_RX_Task_i5_i_CANFD5_1_1_::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlCAN_RX_Task_i5_i_CANFD5_1_1_::getInstance();
    RtosAlHandleOverruns(pTask, -1);

}

  void
DsCRtosAlBus_Configuration_iCR_PCANFD_::onRun(
    DsTErrorList ErrorList) 
{
    RtosAlf308188a_1e95_44aa_bac7_cd4dc4f25032_TaskEntry();
    CR_PCANFD_Com_MainFunction_232334();
    RtosAlf308188a_1e95_44aa_bac7_cd4dc4f25032_TaskExit();

}

  void
DsCRtosAlBus_Configuration_iCR_PCANFD_::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlBus_Configuration_iCR_PCANFD_::getInstance();
    RtosAlHandleOverruns(pTask, -1);

}

  void
DsCRtosAlCAN_RX_Task_i7_i_CANFD_5_2_1_::onRun(
    DsTErrorList ErrorList) 
{
    RtosAlCAN_RX_Task_TaskEntry_1();
    CAN_RX_Component_Function_1();
    RtosAlCAN_RX_Task_TaskExit_1();

}

  void
DsCRtosAlCAN_RX_Task_i7_i_CANFD_5_2_1_::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlCAN_RX_Task_i7_i_CANFD_5_2_1_::getInstance();
    RtosAlHandleOverruns(pTask, -1);

}

  void
DsCRtosAlBus_Configuration_iRSDS_PCANFD_::onRun(
    DsTErrorList ErrorList) 
{
    RtosAl9ab0cc7a_7747_4e61_835a_efecbac90484_TaskEntry();
    RSDS_PCANFD_Com_MainFunction_232336();
    RtosAl9ab0cc7a_7747_4e61_835a_efecbac90484_TaskExit();

}

  void
DsCRtosAlBus_Configuration_iRSDS_PCANFD_::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlBus_Configuration_iRSDS_PCANFD_::getInstance();
    RtosAlHandleOverruns(pTask, -1);

}

  void
DsCRtosAlCAN_RX_Task_i6_i_CANFD5_1_2_::onRun(
    DsTErrorList ErrorList) 
{
    RtosAlCAN_RX_Task_TaskEntry_2();
    CAN_RX_Component_Function_2();
    RtosAlCAN_RX_Task_TaskExit_2();

}

  void
DsCRtosAlCAN_RX_Task_i6_i_CANFD5_1_2_::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlCAN_RX_Task_i6_i_CANFD5_1_2_::getInstance();
    RtosAlHandleOverruns(pTask, -1);

}

  void
DsCRtosAlBus_Configuration_iPT_CAN_::onRun(
    DsTErrorList ErrorList) 
{
    RtosAl25c71bec_d48f_43ef_ad06_2e7dfd82f750_TaskEntry();
    PT_CAN_Com_MainFunction_242148();
    RtosAl25c71bec_d48f_43ef_ad06_2e7dfd82f750_TaskExit();

}

  void
DsCRtosAlBus_Configuration_iPT_CAN_::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlBus_Configuration_iPT_CAN_::getInstance();
    RtosAlHandleOverruns(pTask, -1);

}

  void
DsCRtosAlCAN_RX_Task_i2_i_CANFD5_2_2_::onRun(
    DsTErrorList ErrorList) 
{
    RtosAlCAN_RX_Task_TaskEntry_3();
    CAN_RX_Component_Function_3();
    RtosAlCAN_RX_Task_TaskExit_3();

}

  void
DsCRtosAlCAN_RX_Task_i2_i_CANFD5_2_2_::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlCAN_RX_Task_i2_i_CANFD5_2_2_::getInstance();
    RtosAlHandleOverruns(pTask, -1);

}

  void
DsCRtosAlCAN_RX_Task_i1_i_CAN2_::onRun(
    DsTErrorList ErrorList) 
{
    RtosAlCAN_RX_Task_TaskEntry_4();
    CAN_RX_Component_Function_4();
    RtosAlCAN_RX_Task_TaskExit_4();

}

  void
DsCRtosAlCAN_RX_Task_i1_i_CAN2_::onOverrun(
    DsTErrorList ErrorList) 
{
    DsCTask* pTask = DsCRtosAlCAN_RX_Task_i1_i_CAN2_::getInstance();
    RtosAlHandleOverruns(pTask, -1);

}

  void
RtosAlHandleOverruns(
    DsCTask* pTask, int numberOfAcceptedOverruns) 
{
    /* Value -1 of numberOfAcceptedOverruns represents positive infinity */ 
    if (numberOfAcceptedOverruns < 0)
    {
        return;
    }
    if (pTask->getOverrunCounter() > (unsigned int)numberOfAcceptedOverruns)
    {
        SimEngineApplStop();
        DsCApplication* pAppl = SimEngineApplGet();
        char CallCounterStr[32];
        snprintf(CallCounterStr, 32, "%llu", pTask->getCallCounter());
        pAppl->errorMessage(RTOSAL_TASK_OVERRUN, "%s%s%s%d", "Noa_Nofusion", pTask->getDescription(), CallCounterStr, numberOfAcceptedOverruns);
    }

}

#endif                                 /* RTOSAL_TASK_CPP_ */
/* [EOF] */
