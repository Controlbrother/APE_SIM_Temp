/****************************************************************************\ 
 *** 
 *** File                  : rtosal_simengineap.cpp
 *** 
 *** Generated by dSPACE Tools.
 *** (c) Copyright 2013, dSPACE GmbH. All rights reserved.
\****************************************************************************/

#if !defined(RTOSAL_SIMENGINEAP_CPP_)
#  define    RTOSAL_SIMENGINEAP_CPP_


/* -- Include directives. -- */
#  include "rtosal_task.h"
#  include "dssimengine_api.h"
#  include "IOCode_Data.h"
#  include "rtosal_msg.h"
#  include "rtosal_simengineap.h"

#  if defined(EXTERN_C_DECL)
#    undef EXTERN_C_DECL
#  endif
#  if defined(__cplusplus)
#    define EXTERN_C_DECL extern "C"
#  else
#    define EXTERN_C_DECL extern
#  endif


/* -- Defines and directives in module scope. After include directives. -- */
DSRTT_DEFINE_ENABLE_RTT_COMMUNICATION(g_dsrtt_comm_enabled, 1,
{1})

/* -- Variable declarations in module scope. -- */
double ScaledTimeInterval = 0;
double ScalingFactor = 1;


char EpromIdentifierSymbol[] = "0af9c517-13ad-456e-aeeb-4cb02365aee5";
/* Task information variables for task: Periodic Task 1 */
DsSTaskVariables Periodic_Task_1Vars;

/* Task information variables for task: Task [UDP Receive (3)\Data Received] */
DsSTaskVariables Task_iUDP_Receive_i3_iData_Received_Vars;

/* Task information variables for task: Task [UDP Receive 2\Data Received] */
DsSTaskVariables Task_iUDP_Receive_2_Data_Received_Vars;

/* Task information variables for task: Bus Configuration [ADAS_CAN] */
DsSTaskVariables Bus_Configuration_iADAS_CAN_Vars;

/* Task information variables for task: CAN RX Task (5) [CANFD5-1-1] */
DsSTaskVariables CAN_RX_Task_i5_i_CANFD5_1_1_Vars;

/* Task information variables for task: Bus Configuration [CR_PCANFD] */
DsSTaskVariables Bus_Configuration_iCR_PCANFD_Vars;

/* Task information variables for task: CAN RX Task (7) [CANFD-5-2-1] */
DsSTaskVariables CAN_RX_Task_i7_i_CANFD_5_2_1_Vars;

/* Task information variables for task: Bus Configuration [RSDS_PCANFD] */
DsSTaskVariables Bus_Configuration_iRSDS_PCANFD_Vars;

/* Task information variables for task: CAN RX Task (6) [CANFD5-1-2] */
DsSTaskVariables CAN_RX_Task_i6_i_CANFD5_1_2_Vars;

/* Task information variables for task: Bus Configuration [PT_CAN] */
DsSTaskVariables Bus_Configuration_iPT_CAN_Vars;

/* Task information variables for task: CAN RX Task (2) [CANFD5-2-2] */
DsSTaskVariables CAN_RX_Task_i2_i_CANFD5_2_2_Vars;

/* Task information variables for task: CAN RX Task (1) [CAN2] */
DsSTaskVariables CAN_RX_Task_i1_i_CAN2_Vars;

/* -- Definitions of exported functions. -- */

  void
RtosAlOnInit(
    DsTErrorList ErrorList) 
{
    /* Get application object */
    DsCApplication* pAppl = SimEngineApplGet();

/* XCP-Service Port configuration */
pAppl->setLocalXcpPort(ErrorList, 1236);

    /* Create and configure task: Periodic Task 1 (Source: User default) */
    pRtosAlPeriodic_Task_1 = DsCRtosAlPeriodic_Task_1::create(ErrorList, 
    pAppl,
    "Periodic Task 1 (Source: User default)", 
    (UInt32) 40, 
    (UInt32) 0, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Periodic,
    (DsCTask*) 0,
    (UInt32) 0);

    /* Create and configure task: Bus Configuration [ADAS_CAN] (Source: I/O function, Group: 2b832c10-4014-4cc4-a2fb-77676d178f09) */
    pRtosAlBus_Configuration_iADAS_CAN_ = DsCRtosAlBus_Configuration_iADAS_CAN_::create(ErrorList, 
    pAppl,
    "Bus Configuration [ADAS_CAN] (Source: I/O function, Group: 2b832c10-4014-4cc4-a2fb-77676d178f09)", 
    (UInt32) 10, 
    (UInt32) 3, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Periodic,
    (DsCTask*) 0,
    (UInt32) 0);

    /* Create and configure task: Bus Configuration [CR_PCANFD] (Source: I/O function, Group: 297f8e24-a032-4d06-a551-9f6dabf931d3) */
    pRtosAlBus_Configuration_iCR_PCANFD_ = DsCRtosAlBus_Configuration_iCR_PCANFD_::create(ErrorList, 
    pAppl,
    "Bus Configuration [CR_PCANFD] (Source: I/O function, Group: 297f8e24-a032-4d06-a551-9f6dabf931d3)", 
    (UInt32) 10, 
    (UInt32) 5, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Periodic,
    (DsCTask*) 0,
    (UInt32) 0);

    /* Create and configure task: Bus Configuration [RSDS_PCANFD] (Source: I/O function, Group: 9119ede7-ae96-4219-a8fe-eb7aff4d2d20) */
    pRtosAlBus_Configuration_iRSDS_PCANFD_ = DsCRtosAlBus_Configuration_iRSDS_PCANFD_::create(ErrorList, 
    pAppl,
    "Bus Configuration [RSDS_PCANFD] (Source: I/O function, Group: 9119ede7-ae96-4219-a8fe-eb7aff4d2d20)", 
    (UInt32) 10, 
    (UInt32) 7, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Periodic,
    (DsCTask*) 0,
    (UInt32) 0);

    /* Create and configure task: Bus Configuration [PT_CAN] (Source: I/O function, Group: 9c3a5d70-1082-400c-ad16-f3284dcd7d56) */
    pRtosAlBus_Configuration_iPT_CAN_ = DsCRtosAlBus_Configuration_iPT_CAN_::create(ErrorList, 
    pAppl,
    "Bus Configuration [PT_CAN] (Source: I/O function, Group: 9c3a5d70-1082-400c-ad16-f3284dcd7d56)", 
    (UInt32) 10, 
    (UInt32) 9, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Periodic,
    (DsCTask*) 0,
    (UInt32) 0);

    /* Create and configure task: Task [UDP Receive (3)\\Data Received] (Source: User default) */
    pRtosAlTask_iUDP_Receive_i3_iData_Received_ = DsCRtosAlTask_iUDP_Receive_i3_iData_Received_::create(ErrorList, 
    pAppl,
    "Task [UDP Receive (3)\\Data Received] (Source: User default)", 
    (UInt32) 30, 
    (UInt32) 1, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Aperiodic,
    (DsCTask*) pRtosAlBus_Configuration_iADAS_CAN_,
    (UInt32) 0);

    /* Create and configure task: Task [UDP Receive 2\\Data Received] (Source: User default) */
    pRtosAlTask_iUDP_Receive_2_Data_Received_ = DsCRtosAlTask_iUDP_Receive_2_Data_Received_::create(ErrorList, 
    pAppl,
    "Task [UDP Receive 2\\Data Received] (Source: User default)", 
    (UInt32) 30, 
    (UInt32) 2, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Aperiodic,
    (DsCTask*) pRtosAlBus_Configuration_iADAS_CAN_,
    (UInt32) 0);

    /* Create and configure task: CAN RX Task (5) [CANFD5-1-1] (Source: I/O function) */
    pRtosAlCAN_RX_Task_i5_i_CANFD5_1_1_ = DsCRtosAlCAN_RX_Task_i5_i_CANFD5_1_1_::create(ErrorList, 
    pAppl,
    "CAN RX Task (5) [CANFD5-1-1] (Source: I/O function)", 
    (UInt32) 0, 
    (UInt32) 4, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Aperiodic,
    (DsCTask*) pRtosAlBus_Configuration_iADAS_CAN_,
    (UInt32) 0);

    /* Create and configure task: CAN RX Task (7) [CANFD-5-2-1] (Source: I/O function) */
    pRtosAlCAN_RX_Task_i7_i_CANFD_5_2_1_ = DsCRtosAlCAN_RX_Task_i7_i_CANFD_5_2_1_::create(ErrorList, 
    pAppl,
    "CAN RX Task (7) [CANFD-5-2-1] (Source: I/O function)", 
    (UInt32) 0, 
    (UInt32) 6, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Aperiodic,
    (DsCTask*) pRtosAlBus_Configuration_iADAS_CAN_,
    (UInt32) 0);

    /* Create and configure task: CAN RX Task (6) [CANFD5-1-2] (Source: I/O function) */
    pRtosAlCAN_RX_Task_i6_i_CANFD5_1_2_ = DsCRtosAlCAN_RX_Task_i6_i_CANFD5_1_2_::create(ErrorList, 
    pAppl,
    "CAN RX Task (6) [CANFD5-1-2] (Source: I/O function)", 
    (UInt32) 0, 
    (UInt32) 8, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Aperiodic,
    (DsCTask*) pRtosAlBus_Configuration_iADAS_CAN_,
    (UInt32) 0);

    /* Create and configure task: CAN RX Task (2) [CANFD5-2-2] (Source: I/O function) */
    pRtosAlCAN_RX_Task_i2_i_CANFD5_2_2_ = DsCRtosAlCAN_RX_Task_i2_i_CANFD5_2_2_::create(ErrorList, 
    pAppl,
    "CAN RX Task (2) [CANFD5-2-2] (Source: I/O function)", 
    (UInt32) 0, 
    (UInt32) 10, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Aperiodic,
    (DsCTask*) pRtosAlBus_Configuration_iADAS_CAN_,
    (UInt32) 0);

    /* Create and configure task: CAN RX Task (1) [CAN2] (Source: I/O function) */
    pRtosAlCAN_RX_Task_i1_i_CAN2_ = DsCRtosAlCAN_RX_Task_i1_i_CAN2_::create(ErrorList, 
    pAppl,
    "CAN RX Task (1) [CAN2] (Source: I/O function)", 
    (UInt32) 0, 
    (UInt32) 11, 
    (UInt32) 0,
    (UInt32) DsNTask::SchedulingPolicy::FirstComeFirstServe, 
    (UInt32) DsNTask::OverrunMode::HandlerCall,
    (UInt32) 0,
    (UInt32) DsNTask::TaskType::Aperiodic,
    (DsCTask*) pRtosAlBus_Configuration_iADAS_CAN_,
    (UInt32) 0);

    /* Set task simulation time variable */

    pRtosAlPeriodic_Task_1->setSimTimeVariable(&RtosAlTaskSimTime_Periodic_Task_1);

    pRtosAlBus_Configuration_iADAS_CAN_->setSimTimeVariable(&RtosAlTaskSimTime_Bus_Configuration);

    pRtosAlBus_Configuration_iCR_PCANFD_->setSimTimeVariable(&RtosAlTaskSimTime_Bus_Configuration_1);

    pRtosAlBus_Configuration_iRSDS_PCANFD_->setSimTimeVariable(&RtosAlTaskSimTime_Bus_Configuration_2);

    pRtosAlBus_Configuration_iPT_CAN_->setSimTimeVariable(&RtosAlTaskSimTime_Bus_Configuration_3);
pRtosAlBus_Configuration_iADAS_CAN_->bindFcnModule(ErrorList, fcnModule_RuntimeTunableParams);
    /* Create and init timer driver and bind task to it */
    pRtosAlTimer_Periodic_Task_1 = DsCTimer::create(ErrorList, 0.01, 0.0);
    pRtosAlPeriodic_Task_1->bindTrigger(ErrorList, pRtosAlTimer_Periodic_Task_1);
pRtosAlTask_iUDP_Receive_i3_iData_Received_->bindTrigger(ErrorList, pUDP_Receive_3_DriverHandle, 0);
pRtosAlTask_iUDP_Receive_2_Data_Received_->bindTrigger(ErrorList, pUDP_Receive_2_DriverHandle, 0);

    /* Create and init timer driver and bind task to it */
    pRtosAlTimer_Bus_Configuration_iADAS_CAN_ = DsCTimer::create(ErrorList, 0.001, 0.0);
    pRtosAlBus_Configuration_iADAS_CAN_->bindTrigger(ErrorList, pRtosAlTimer_Bus_Configuration_iADAS_CAN_);
cANFD5_1_1_CAN_RX_TaskId = pRtosAlCAN_RX_Task_i5_i_CANFD5_1_1_->bindTrigger(ErrorList, pCANFD5_1_1_DriverHandle);

    /* Create and init timer driver and bind task to it */
    pRtosAlTimer_Bus_Configuration_iCR_PCANFD_ = DsCTimer::create(ErrorList, 0.001, 0.0);
    pRtosAlBus_Configuration_iCR_PCANFD_->bindTrigger(ErrorList, pRtosAlTimer_Bus_Configuration_iCR_PCANFD_);
cANFD_5_2_1_CAN_RX_TaskId = pRtosAlCAN_RX_Task_i7_i_CANFD_5_2_1_->bindTrigger(ErrorList, pCANFD_5_2_1_DriverHandle);

    /* Create and init timer driver and bind task to it */
    pRtosAlTimer_Bus_Configuration_iRSDS_PCANFD_ = DsCTimer::create(ErrorList, 0.001, 0.0);
    pRtosAlBus_Configuration_iRSDS_PCANFD_->bindTrigger(ErrorList, pRtosAlTimer_Bus_Configuration_iRSDS_PCANFD_);
cANFD5_1_2_CAN_RX_TaskId = pRtosAlCAN_RX_Task_i6_i_CANFD5_1_2_->bindTrigger(ErrorList, pCANFD5_1_2_DriverHandle);

    /* Create and init timer driver and bind task to it */
    pRtosAlTimer_Bus_Configuration_iPT_CAN_ = DsCTimer::create(ErrorList, 0.001, 0.0);
    pRtosAlBus_Configuration_iPT_CAN_->bindTrigger(ErrorList, pRtosAlTimer_Bus_Configuration_iPT_CAN_);
cANFD5_2_2_CAN_RX_TaskId = pRtosAlCAN_RX_Task_i2_i_CANFD5_2_2_->bindTrigger(ErrorList, pCANFD5_2_2_DriverHandle);
cAN2_CAN_RX_TaskId = pRtosAlCAN_RX_Task_i1_i_CAN2_->bindTrigger(ErrorList, pCAN2_DriverHandle);

    /* Bind function modules to task: Periodic Task 1 */
    pRtosAlPeriodic_Task_1->bindFcnModule(ErrorList, noa_nofusion_fcnModule_SIDRoot_TID1);
    pRtosAlPeriodic_Task_1->bindFcnModule(ErrorList, noa_nofusion_fcnModule_SIDS30_TID1);
    pRtosAlPeriodic_Task_1->bindFcnModule(ErrorList, noa_nofusion_fcnModule_SIDS32_TID1);
    pRtosAlPeriodic_Task_1->bindFcnModule(ErrorList, noa_nofusion_fcnModule_SIDS40_TID1);
    pRtosAlPeriodic_Task_1->bindFcnModule(ErrorList, noa_nofusion_fcnModule_SIDS42_TID1);
    pRtosAlPeriodic_Task_1->bindFcnModule(ErrorList, noa_nofusion_fcnModule_SIDS7_TIDtriggered);
    pRtosAlPeriodic_Task_1->bindFcnModule(ErrorList, noa_nofusion_fcnModule_SIDS6_TIDtriggered);

    /* Bind function modules to task: Task [UDP Receive (3)\Data Received] */
    pRtosAlTask_iUDP_Receive_i3_iData_Received_->bindFcnModule(ErrorList, noa_nofusion_fcnModule_SIDS21_TID3);

    /* Bind function modules to task: Task [UDP Receive 2\Data Received] */
    pRtosAlTask_iUDP_Receive_2_Data_Received_->bindFcnModule(ErrorList, noa_nofusion_fcnModule_SIDS26_TID4);

    /* Init task information variables of task: Periodic Task 1 */
    pRtosAlPeriodic_Task_1->setTaskVariables(ErrorList, &Periodic_Task_1Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(Periodic_Task_1Vars);

    /* Init task information variables of task: Task [UDP Receive (3)\Data Received] */
    pRtosAlTask_iUDP_Receive_i3_iData_Received_->setTaskVariables(ErrorList, &Task_iUDP_Receive_i3_iData_Received_Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(Task_iUDP_Receive_i3_iData_Received_Vars);

    /* Init task information variables of task: Task [UDP Receive 2\Data Received] */
    pRtosAlTask_iUDP_Receive_2_Data_Received_->setTaskVariables(ErrorList, &Task_iUDP_Receive_2_Data_Received_Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(Task_iUDP_Receive_2_Data_Received_Vars);

    /* Init task information variables of task: Bus Configuration */
    pRtosAlBus_Configuration_iADAS_CAN_->setTaskVariables(ErrorList, &Bus_Configuration_iADAS_CAN_Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(Bus_Configuration_iADAS_CAN_Vars);

    /* Init task information variables of task: CAN RX Task (5) */
    pRtosAlCAN_RX_Task_i5_i_CANFD5_1_1_->setTaskVariables(ErrorList, &CAN_RX_Task_i5_i_CANFD5_1_1_Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(CAN_RX_Task_i5_i_CANFD5_1_1_Vars);

    /* Init task information variables of task: Bus Configuration */
    pRtosAlBus_Configuration_iCR_PCANFD_->setTaskVariables(ErrorList, &Bus_Configuration_iCR_PCANFD_Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(Bus_Configuration_iCR_PCANFD_Vars);

    /* Init task information variables of task: CAN RX Task (7) */
    pRtosAlCAN_RX_Task_i7_i_CANFD_5_2_1_->setTaskVariables(ErrorList, &CAN_RX_Task_i7_i_CANFD_5_2_1_Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(CAN_RX_Task_i7_i_CANFD_5_2_1_Vars);

    /* Init task information variables of task: Bus Configuration */
    pRtosAlBus_Configuration_iRSDS_PCANFD_->setTaskVariables(ErrorList, &Bus_Configuration_iRSDS_PCANFD_Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(Bus_Configuration_iRSDS_PCANFD_Vars);

    /* Init task information variables of task: CAN RX Task (6) */
    pRtosAlCAN_RX_Task_i6_i_CANFD5_1_2_->setTaskVariables(ErrorList, &CAN_RX_Task_i6_i_CANFD5_1_2_Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(CAN_RX_Task_i6_i_CANFD5_1_2_Vars);

    /* Init task information variables of task: Bus Configuration */
    pRtosAlBus_Configuration_iPT_CAN_->setTaskVariables(ErrorList, &Bus_Configuration_iPT_CAN_Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(Bus_Configuration_iPT_CAN_Vars);

    /* Init task information variables of task: CAN RX Task (2) */
    pRtosAlCAN_RX_Task_i2_i_CANFD5_2_2_->setTaskVariables(ErrorList, &CAN_RX_Task_i2_i_CANFD5_2_2_Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(CAN_RX_Task_i2_i_CANFD5_2_2_Vars);

    /* Init task information variables of task: CAN RX Task (1) */
    pRtosAlCAN_RX_Task_i1_i_CAN2_->setTaskVariables(ErrorList, &CAN_RX_Task_i1_i_CAN2_Vars);
    DS_SET_TASK_VARIABLE_SYMBOLS(CAN_RX_Task_i1_i_CAN2_Vars);

    /* Set the deadline violation handler of task: pRtosAlPeriodic_Task_1 */
    pRtosAlPeriodic_Task_1->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* Set the deadline violation handler of task: pRtosAlTask_iUDP_Receive_i3_iData_Received_ */
    pRtosAlTask_iUDP_Receive_i3_iData_Received_->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* Set the deadline violation handler of task: pRtosAlTask_iUDP_Receive_2_Data_Received_ */
    pRtosAlTask_iUDP_Receive_2_Data_Received_->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* Set the deadline violation handler of task: pRtosAlBus_Configuration_iADAS_CAN_ */
    pRtosAlBus_Configuration_iADAS_CAN_->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* Set the deadline violation handler of task: pRtosAlCAN_RX_Task_i5_i_CANFD5_1_1_ */
    pRtosAlCAN_RX_Task_i5_i_CANFD5_1_1_->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* Set the deadline violation handler of task: pRtosAlBus_Configuration_iCR_PCANFD_ */
    pRtosAlBus_Configuration_iCR_PCANFD_->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* Set the deadline violation handler of task: pRtosAlCAN_RX_Task_i7_i_CANFD_5_2_1_ */
    pRtosAlCAN_RX_Task_i7_i_CANFD_5_2_1_->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* Set the deadline violation handler of task: pRtosAlBus_Configuration_iRSDS_PCANFD_ */
    pRtosAlBus_Configuration_iRSDS_PCANFD_->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* Set the deadline violation handler of task: pRtosAlCAN_RX_Task_i6_i_CANFD5_1_2_ */
    pRtosAlCAN_RX_Task_i6_i_CANFD5_1_2_->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* Set the deadline violation handler of task: pRtosAlBus_Configuration_iPT_CAN_ */
    pRtosAlBus_Configuration_iPT_CAN_->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* Set the deadline violation handler of task: pRtosAlCAN_RX_Task_i2_i_CANFD5_2_2_ */
    pRtosAlCAN_RX_Task_i2_i_CANFD5_2_2_->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* Set the deadline violation handler of task: pRtosAlCAN_RX_Task_i1_i_CAN2_ */
    pRtosAlCAN_RX_Task_i1_i_CAN2_->setDeadlineViolationFunction(ErrorList, &RtosAlDefaultDeadlineViolationHandler);

    /* DSModelAccess initialization hook */
    (void)DS_MODEL_ACCESS_INIT();

}

  void
RtosAlOnStart(
    DsTErrorList ErrorList) 
{
    // Get the application object
    DsCApplication* pAppl = SimEngineApplGet();

    // Create local copies of variables
    double tmpScaledTimeInterval = ScaledTimeInterval;
    double tmpScalingFactor = ScalingFactor;

    // Perform range check for scaling variables
    if (0.0 > ScaledTimeInterval)
    {
        // Range check failed. Stop the application
        pAppl->errorMessage(RTOSAL_PARAM_OUT_OF_RANGE, "%s%f%s%s" , "ScaledTimeInterval" , ScaledTimeInterval, "0.0" , "Inf" );

        // Reset the local copy to the default value and leave the original unchanged
        tmpScaledTimeInterval = 0.0;
    }
    if (1.0 > ScalingFactor)
    {
        // Range check failed. Stop the application
        pAppl->errorMessage(RTOSAL_PARAM_OUT_OF_RANGE, "%s%f%s%s" , "ScalingFactor" , ScalingFactor, "1.0" , "Inf" );

        // Reset the local copy to the default value and leave the original unchanged
        tmpScalingFactor = 1.0;
    }

    // Set the startup slowdown parameters (local copies) to the realtime application
    pAppl->setSlowStart(ErrorList,tmpScaledTimeInterval,tmpScalingFactor);

    /* Init task simulation time variables */

    RtosAlTaskSimTime_Periodic_Task_1 = 0;
    StepCounter_Periodic_Task_1 = 0;

    RtosAlTaskSimTime_Bus_Configuration = 0;
    StepCounter_Bus_Configuration = 0;

    RtosAlTaskSimTime_Bus_Configuration_1 = 0;
    StepCounter_Bus_Configuration_1 = 0;

    RtosAlTaskSimTime_Bus_Configuration_2 = 0;
    StepCounter_Bus_Configuration_2 = 0;

    RtosAlTaskSimTime_Bus_Configuration_3 = 0;
    StepCounter_Bus_Configuration_3 = 0;

}

#endif                                 /* RTOSAL_SIMENGINEAP_CPP_ */
/* [EOF] */
